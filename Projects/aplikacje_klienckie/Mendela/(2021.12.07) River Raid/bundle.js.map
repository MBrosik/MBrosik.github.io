{"version":3,"sources":["webpack://project/./src/style.scss","webpack://project/./node_modules/css-loader/dist/runtime/api.js","webpack://project/./node_modules/css-loader/dist/runtime/cssWithMappingToString.js","webpack://project/./node_modules/css-loader/dist/runtime/getUrl.js","webpack://project/./src/fonts/slkscr/slkscre.ttf","webpack://project/./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js","webpack://project/webpack/bootstrap","webpack://project/webpack/runtime/compat get default export","webpack://project/webpack/runtime/define property getters","webpack://project/webpack/runtime/global","webpack://project/webpack/runtime/hasOwnProperty shorthand","webpack://project/webpack/runtime/publicPath","webpack://project/./src/style.scss?75ba","webpack://project/./src/components/modules/constants/mapInfo.ts","webpack://project/./src/components/modules/constants/Levels/level1.ts","webpack://project/./src/components/utils/TwoJS/Vector2.ts","webpack://project/./src/components/utils/TwoJS/Image_Mesh.ts","webpack://project/./src/components/utils/TwoJS/raycaster/colorRaycaster.ts","webpack://project/./src/components/utils/TwoJS/raycaster/squareSquareReycaster.ts","webpack://project/./src/components/utils/TwoJS/Renderer.ts","webpack://project/./src/components/utils/useSleep.ts","webpack://project/./src/components/modules/GameConfig.ts","webpack://project/./src/components/modules/KeyboardManager.ts","webpack://project/./src/components/utils/audioLoader.ts","webpack://project/./src/audio/crush.wav","webpack://project/./src/audio/enemyCrush.wav","webpack://project/./src/audio/flyNoise.wav","webpack://project/./src/audio/flyStart.wav","webpack://project/./src/audio/Health.wav","webpack://project/./src/audio/strike.wav","webpack://project/./src/audio/tankStrike.wav","webpack://project/./src/audio/helicopterStrike.wav","webpack://project/./src/components/modules/LoadAllAudio.ts","webpack://project/./src/components/utils/img_loader.ts","webpack://project/./src/components/utils/imgReverse.ts","webpack://project/./src/images/plane/plane-straight.png","webpack://project/./src/images/plane/plane-right.png","webpack://project/./src/images/plane/plane-left.png","webpack://project/./src/images/plane/plane-crash.png","webpack://project/./src/images/plane/plane-level-pos.png","webpack://project/./src/images/enemies/helicopter1.png","webpack://project/./src/images/enemies/helicopter2.png","webpack://project/./src/images/enemies/fighterHelicopter1.png","webpack://project/./src/images/enemies/fighterHelicopter2.png","webpack://project/./src/images/enemies/tank1.png","webpack://project/./src/images/enemies/tank2.png","webpack://project/./src/images/enemies/tankBullet/tankBullet0.png","webpack://project/./src/images/enemies/tankBullet/tankBullet1.png","webpack://project/./src/images/enemies/tankBullet/tankBullet2.png","webpack://project/./src/images/enemies/tankBullet/tankBullet3.png","webpack://project/./src/images/enemies/tankBullet/tankBullet4.png","webpack://project/./src/images/enemies/tankBullet/tankBullet5.png","webpack://project/./src/images/enemies/tankBullet/tankBullet6.png","webpack://project/./src/images/enemies/ship.png","webpack://project/./src/images/enemies/fighterPlane.png","webpack://project/./src/images/enemies/ballon.png","webpack://project/./src/images/fuel.png","webpack://project/./src/images/bridge.png","webpack://project/./src/images/gasStatusBar.png","webpack://project/./src/images/levels/level1.png","webpack://project/./src/images/levels/level2.png","webpack://project/./src/components/modules/loadAllImages.ts","webpack://project/./src/components/modules/mapElements/Bullet.ts","webpack://project/./src/components/modules/mapElements/destroyAnimation.ts","webpack://project/./src/components/modules/mapElements/Player.ts","webpack://project/./src/components/utils/inRange.ts","webpack://project/./src/components/utils/TwoJS/Camera.ts","webpack://project/./src/components/utils/TwoJS/Scene.ts","webpack://project/./src/components/modules/mapElements/Enemy.ts","webpack://project/./src/components/modules/mapElements/enemies/fighterHelicopterBullet.ts","webpack://project/./src/components/modules/mapElements/enemies/Helicopter.ts","webpack://project/./src/components/modules/mapElements/enemies/Ship.ts","webpack://project/./src/components/modules/mapElements/enemies/FighterPlane.ts","webpack://project/./src/components/modules/mapElements/enemies/tank/TankBullet.ts","webpack://project/./src/components/modules/mapElements/enemies/tank/Tank.ts","webpack://project/./src/components/modules/mapElements/Bridge.ts","webpack://project/./src/components/modules/mapElements/ScoreBoard.ts","webpack://project/./src/components/modules/mapElements/Block.ts","webpack://project/./src/components/modules/mapElements/Fuel.ts","webpack://project/./src/components/modules/mapElements/enemies/Ballon.ts","webpack://project/./src/components/modules/constants/Levels/level2.ts","webpack://project/./src/components/Main.ts","webpack://project/./src/components/utils/extending.ts","webpack://project/./src/index.ts"],"names":["___CSS_LOADER_EXPORT___","___CSS_LOADER_URL_REPLACEMENT_0___","push","module","id","exports","cssWithMappingToString","list","toString","this","map","item","content","concat","join","i","modules","mediaQuery","dedupe","alreadyImportedModules","length","_i","_arrayLikeToArray","arr","len","arr2","Array","_item","isArray","_arrayWithHoles","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","next","done","value","err","_iterableToArrayLimit","o","minLen","n","prototype","call","slice","constructor","name","from","test","_unsupportedIterableToArray","TypeError","_nonIterableRest","cssMapping","btoa","base64","unescape","encodeURIComponent","JSON","stringify","data","sourceMapping","sourceURLs","sources","source","sourceRoot","url","options","__esModule","default","hash","needQuotes","replace","memo","getTarget","target","styleTarget","document","querySelector","window","HTMLIFrameElement","contentDocument","head","e","stylesInDom","getIndexByIdentifier","identifier","result","modulesToDom","idCountMap","identifiers","base","count","index","obj","css","media","sourceMap","references","updater","addStyle","insertStyleElement","style","createElement","attributes","nonce","keys","forEach","key","setAttribute","insert","Error","appendChild","textStore","replaceText","replacement","filter","Boolean","applyToSingletonTag","remove","styleSheet","cssText","cssNode","createTextNode","childNodes","removeChild","insertBefore","applyToTag","removeAttribute","firstChild","singleton","singletonCounter","update","styleIndex","bind","parentNode","removeStyleElement","newObj","all","atob","lastIdentifiers","newList","newLastIdentifiers","_index","splice","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","getter","d","a","definition","defineProperty","enumerable","get","g","globalThis","Function","prop","hasOwnProperty","scriptUrl","importScripts","location","currentScript","src","scripts","getElementsByTagName","p","getPos","x","y","mapInfo","blocks","position","startPos","other","type","reversed","moveable","helType","tankType","endPos","shotPos","Vector2","Math","sqrt","pow","vect2","abs","acos","dot","getLength","atan2","degree","cos","sin","factor","Image_Mesh","image","dx","dy","dz","dw","dh","sx","sy","sw","width","sh","height","image_info","map_info","z","imageRenderBool","val","ctx","camera","s_width","s_height","s_x","s_y","beginPath","drawImage","closePath","colorRaycaster","aPaint","bPaint","html_dom","getContext","specificColor","clearRect","el","flat","action","imgData","getImageData","imgDataAfter","count1","SquareSquareReycaster","square1","square2","renderer_functions","renderer_functions_after","TIME","last_time","Date","now","time_stamp","Renderer","scene","webkitImageSmoothingEnabled","mozImageSmoothingEnabled","imageSmoothingEnabled","backgroundColor","stopBool","render","fillStyle","fillRect","mesh_array","sort","el1","x1","y1","z1","requestAnimationFrame","useSleep","time","Promise","resolve","setTimeout","moveBool","addEventListener","onkeydown_e","onkeyup_e","code","Keys","preventDefault","KeyA","KeyD","KeyW","KeyS","KeyQ","KeyE","KeyZ","KeyY","KeyL","Numpad8","Numpad5","Numpad4","Numpad6","Numpad7","Numpad9","ControlLeft","Space","audioLoader","link","audio","Audio","oncanplaythrough","LoadAllAudio","audios","crush","enemyCrush","flyNoise","flyStart","Health","strike","tankStrike","helicopterStrike","img_loader","img","onload","imgReverse","canvas","canvasContext","translate","scale","toDataURL","allImages","Bullet","move","colider","mainInstance","rect","fill","player","removeIf","checkCollision","enemy","enemies","fuels","destroy","getCollision","destroyAnimation","callable","descriptor","func","async","args","Player","cloneNode","play","imgData1","ceil","random","putImageData","plane","straight","super","startPosition","deltaShot","lastShot","enemyColider","playerMove","init","onended","GameConfig","loop","find","findIndex","number","begin","end","scoreBoard","levelPos","left","right","bullet","add","colideEnemy","checkLives","some","addFuel","pause","currentTime","lives","fuelStatus","paintMap","HighScore","score","restartGame","Camera","Scene","meshes","mesh","Enemy","mapData","distanceToPlayer","activate","movable","renderer","fly","fighterHelicopterBullet","Helicopter","reverse","helicopter","normal","ratio","dateNow","timeStamp","bulletColider","stateString","Ship","ship","col1","col2","FighterPlane","fighterPlane","TankBullet","bullets","tank","whMultiplier","startTime","killTime","killTimeStamp","killIterator","boom","xEnd","yEnd","parsedX","parsedY","deltaTime","xMath","yMath","PI","Tank","startImg","speed","moveDateNow","moveTimeStamp","shootDateNow","shootTimeStamp","moveAnimation","move1","shoot","parse","Bridge","tankInfo","bridge","getElementById","ScoreBoard","loseFuelDateNow","loseFuelTimeStamp","fuelDateNow","fuelTimeStamp","fuelUsage","addToRender","parseInt","sessionStorage","getItem","setItem","gasStatusBar","xArm","width1","yArm","font","textAlign","fillText","Block","levels","Fuel","fuel","Ballon","ballon","myRandom","floor","bridges","crash","helicopter1","helicopter2","fighterHelicopter","fighterHelicopter1","fighterHelicopter2","tankBullet0","tankBullet1","tankBullet2","tankBullet3","tankBullet4","tankBullet5","tankBullet6","tank1","tank2","level1","level2","loadAllImages","getAudios","mouse","body","onclick","keyboard","race","level","ind","levelBefore","max","imageBefore","boostY","startPosPlayer","batCopter","batTank","batShip","batPlane","batBallon","batBridge","batFuel"],"mappings":"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","file":"main.js","sourcesContent":["// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../node_modules/css-loader/dist/runtime/api.js\";\nimport ___CSS_LOADER_GET_URL_IMPORT___ from \"../node_modules/css-loader/dist/runtime/getUrl.js\";\nimport ___CSS_LOADER_URL_IMPORT_0___ from \"./fonts/slkscr/slkscre.ttf\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\nvar ___CSS_LOADER_URL_REPLACEMENT_0___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_0___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"body{padding:0;margin:0}#root{width:100%;height:100vh;display:flex;justify-content:center;align-items:center}@font-face{font-family:\\\"slkscr\\\";src:url(\" + ___CSS_LOADER_URL_REPLACEMENT_0___ + \")}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/style.scss\"],\"names\":[],\"mappings\":\"AAAA,KACG,SAAA,CACA,QAAA,CAGH,MACG,UAAA,CACA,YAAA,CAEA,YAAA,CACA,sBAAA,CACA,kBAAA,CAGH,WACG,oBAAA,CACA,2CAAA\",\"sourcesContent\":[\"body{\\r\\n   padding:0;\\r\\n   margin:0;\\r\\n}\\r\\n\\r\\n#root {\\r\\n   width: 100%;\\r\\n   height: 100vh;\\r\\n\\r\\n   display:flex;\\r\\n   justify-content:center;\\r\\n   align-items:center;\\r\\n}\\r\\n\\r\\n@font-face {\\r\\n   font-family: 'slkscr';\\r\\n   src: url('fonts/slkscr/slkscre.ttf');\\r\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","\"use strict\";\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\n// eslint-disable-next-line func-names\nmodule.exports = function (cssWithMappingToString) {\n  var list = []; // return the list of modules as css string\n\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = cssWithMappingToString(item);\n\n      if (item[2]) {\n        return \"@media \".concat(item[2], \" {\").concat(content, \"}\");\n      }\n\n      return content;\n    }).join(\"\");\n  }; // import a list of modules into the list\n  // eslint-disable-next-line func-names\n\n\n  list.i = function (modules, mediaQuery, dedupe) {\n    if (typeof modules === \"string\") {\n      // eslint-disable-next-line no-param-reassign\n      modules = [[null, modules, \"\"]];\n    }\n\n    var alreadyImportedModules = {};\n\n    if (dedupe) {\n      for (var i = 0; i < this.length; i++) {\n        // eslint-disable-next-line prefer-destructuring\n        var id = this[i][0];\n\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n\n    for (var _i = 0; _i < modules.length; _i++) {\n      var item = [].concat(modules[_i]);\n\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        // eslint-disable-next-line no-continue\n        continue;\n      }\n\n      if (mediaQuery) {\n        if (!item[2]) {\n          item[2] = mediaQuery;\n        } else {\n          item[2] = \"\".concat(mediaQuery, \" and \").concat(item[2]);\n        }\n      }\n\n      list.push(item);\n    }\n  };\n\n  return list;\n};","\"use strict\";\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nmodule.exports = function cssWithMappingToString(item) {\n  var _item = _slicedToArray(item, 4),\n      content = _item[1],\n      cssMapping = _item[3];\n\n  if (typeof btoa === \"function\") {\n    // eslint-disable-next-line no-undef\n    var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(cssMapping))));\n    var data = \"sourceMappingURL=data:application/json;charset=utf-8;base64,\".concat(base64);\n    var sourceMapping = \"/*# \".concat(data, \" */\");\n    var sourceURLs = cssMapping.sources.map(function (source) {\n      return \"/*# sourceURL=\".concat(cssMapping.sourceRoot || \"\").concat(source, \" */\");\n    });\n    return [content].concat(sourceURLs).concat([sourceMapping]).join(\"\\n\");\n  }\n\n  return [content].join(\"\\n\");\n};","\"use strict\";\n\nmodule.exports = function (url, options) {\n  if (!options) {\n    // eslint-disable-next-line no-param-reassign\n    options = {};\n  } // eslint-disable-next-line no-underscore-dangle, no-param-reassign\n\n\n  url = url && url.__esModule ? url.default : url;\n\n  if (typeof url !== \"string\") {\n    return url;\n  } // If url is already wrapped in quotes, remove them\n\n\n  if (/^['\"].*['\"]$/.test(url)) {\n    // eslint-disable-next-line no-param-reassign\n    url = url.slice(1, -1);\n  }\n\n  if (options.hash) {\n    // eslint-disable-next-line no-param-reassign\n    url += options.hash;\n  } // Should url be wrapped?\n  // See https://drafts.csswg.org/css-values-3/#urls\n\n\n  if (/[\"'() \\t\\n]/.test(url) || options.needQuotes) {\n    return \"\\\"\".concat(url.replace(/\"/g, '\\\\\"').replace(/\\n/g, \"\\\\n\"), \"\\\"\");\n  }\n\n  return url;\n};","export default __webpack_public_path__ + \"fonts/07ff5c3a24dfbd43d4b23ef445bf2c40-slkscre.ttf\";","\"use strict\";\n\nvar isOldIE = function isOldIE() {\n  var memo;\n  return function memorize() {\n    if (typeof memo === 'undefined') {\n      // Test for IE <= 9 as proposed by Browserhacks\n      // @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n      // Tests for existence of standard globals is to allow style-loader\n      // to operate correctly into non-standard environments\n      // @see https://github.com/webpack-contrib/style-loader/issues/177\n      memo = Boolean(window && document && document.all && !window.atob);\n    }\n\n    return memo;\n  };\n}();\n\nvar getTarget = function getTarget() {\n  var memo = {};\n  return function memorize(target) {\n    if (typeof memo[target] === 'undefined') {\n      var styleTarget = document.querySelector(target); // Special case to return head of iframe instead of iframe itself\n\n      if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n        try {\n          // This will throw an exception if access to iframe is blocked\n          // due to cross-origin restrictions\n          styleTarget = styleTarget.contentDocument.head;\n        } catch (e) {\n          // istanbul ignore next\n          styleTarget = null;\n        }\n      }\n\n      memo[target] = styleTarget;\n    }\n\n    return memo[target];\n  };\n}();\n\nvar stylesInDom = [];\n\nfunction getIndexByIdentifier(identifier) {\n  var result = -1;\n\n  for (var i = 0; i < stylesInDom.length; i++) {\n    if (stylesInDom[i].identifier === identifier) {\n      result = i;\n      break;\n    }\n  }\n\n  return result;\n}\n\nfunction modulesToDom(list, options) {\n  var idCountMap = {};\n  var identifiers = [];\n\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i];\n    var id = options.base ? item[0] + options.base : item[0];\n    var count = idCountMap[id] || 0;\n    var identifier = \"\".concat(id, \" \").concat(count);\n    idCountMap[id] = count + 1;\n    var index = getIndexByIdentifier(identifier);\n    var obj = {\n      css: item[1],\n      media: item[2],\n      sourceMap: item[3]\n    };\n\n    if (index !== -1) {\n      stylesInDom[index].references++;\n      stylesInDom[index].updater(obj);\n    } else {\n      stylesInDom.push({\n        identifier: identifier,\n        updater: addStyle(obj, options),\n        references: 1\n      });\n    }\n\n    identifiers.push(identifier);\n  }\n\n  return identifiers;\n}\n\nfunction insertStyleElement(options) {\n  var style = document.createElement('style');\n  var attributes = options.attributes || {};\n\n  if (typeof attributes.nonce === 'undefined') {\n    var nonce = typeof __webpack_nonce__ !== 'undefined' ? __webpack_nonce__ : null;\n\n    if (nonce) {\n      attributes.nonce = nonce;\n    }\n  }\n\n  Object.keys(attributes).forEach(function (key) {\n    style.setAttribute(key, attributes[key]);\n  });\n\n  if (typeof options.insert === 'function') {\n    options.insert(style);\n  } else {\n    var target = getTarget(options.insert || 'head');\n\n    if (!target) {\n      throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.\");\n    }\n\n    target.appendChild(style);\n  }\n\n  return style;\n}\n\nfunction removeStyleElement(style) {\n  // istanbul ignore if\n  if (style.parentNode === null) {\n    return false;\n  }\n\n  style.parentNode.removeChild(style);\n}\n/* istanbul ignore next  */\n\n\nvar replaceText = function replaceText() {\n  var textStore = [];\n  return function replace(index, replacement) {\n    textStore[index] = replacement;\n    return textStore.filter(Boolean).join('\\n');\n  };\n}();\n\nfunction applyToSingletonTag(style, index, remove, obj) {\n  var css = remove ? '' : obj.media ? \"@media \".concat(obj.media, \" {\").concat(obj.css, \"}\") : obj.css; // For old IE\n\n  /* istanbul ignore if  */\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = replaceText(index, css);\n  } else {\n    var cssNode = document.createTextNode(css);\n    var childNodes = style.childNodes;\n\n    if (childNodes[index]) {\n      style.removeChild(childNodes[index]);\n    }\n\n    if (childNodes.length) {\n      style.insertBefore(cssNode, childNodes[index]);\n    } else {\n      style.appendChild(cssNode);\n    }\n  }\n}\n\nfunction applyToTag(style, options, obj) {\n  var css = obj.css;\n  var media = obj.media;\n  var sourceMap = obj.sourceMap;\n\n  if (media) {\n    style.setAttribute('media', media);\n  } else {\n    style.removeAttribute('media');\n  }\n\n  if (sourceMap && typeof btoa !== 'undefined') {\n    css += \"\\n/*# sourceMappingURL=data:application/json;base64,\".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), \" */\");\n  } // For old IE\n\n  /* istanbul ignore if  */\n\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    while (style.firstChild) {\n      style.removeChild(style.firstChild);\n    }\n\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nvar singleton = null;\nvar singletonCounter = 0;\n\nfunction addStyle(obj, options) {\n  var style;\n  var update;\n  var remove;\n\n  if (options.singleton) {\n    var styleIndex = singletonCounter++;\n    style = singleton || (singleton = insertStyleElement(options));\n    update = applyToSingletonTag.bind(null, style, styleIndex, false);\n    remove = applyToSingletonTag.bind(null, style, styleIndex, true);\n  } else {\n    style = insertStyleElement(options);\n    update = applyToTag.bind(null, style, options);\n\n    remove = function remove() {\n      removeStyleElement(style);\n    };\n  }\n\n  update(obj);\n  return function updateStyle(newObj) {\n    if (newObj) {\n      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap) {\n        return;\n      }\n\n      update(obj = newObj);\n    } else {\n      remove();\n    }\n  };\n}\n\nmodule.exports = function (list, options) {\n  options = options || {}; // Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n  // tags it will allow on a page\n\n  if (!options.singleton && typeof options.singleton !== 'boolean') {\n    options.singleton = isOldIE();\n  }\n\n  list = list || [];\n  var lastIdentifiers = modulesToDom(list, options);\n  return function update(newList) {\n    newList = newList || [];\n\n    if (Object.prototype.toString.call(newList) !== '[object Array]') {\n      return;\n    }\n\n    for (var i = 0; i < lastIdentifiers.length; i++) {\n      var identifier = lastIdentifiers[i];\n      var index = getIndexByIdentifier(identifier);\n      stylesInDom[index].references--;\n    }\n\n    var newLastIdentifiers = modulesToDom(newList, options);\n\n    for (var _i = 0; _i < lastIdentifiers.length; _i++) {\n      var _identifier = lastIdentifiers[_i];\n\n      var _index = getIndexByIdentifier(_identifier);\n\n      if (stylesInDom[_index].references === 0) {\n        stylesInDom[_index].updater();\n\n        stylesInDom.splice(_index, 1);\n      }\n    }\n\n    lastIdentifiers = newLastIdentifiers;\n  };\n};","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) scriptUrl = scripts[scripts.length - 1].src\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","import api from \"!../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../node_modules/css-loader/dist/cjs.js!../node_modules/sass-loader/dist/cjs.js!./style.scss\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","export default {\r\n   width: 1000,\r\n   height:700\r\n}","\r\n// :(block|enemy)[]\r\n\r\nimport mapInfo from \"../mapInfo\"\r\nimport { block, other } from \"./levelInt\"\r\n\r\nfunction getPos(x:number,y:number){\r\n   return { x: x * mapInfo.width, y: y * mapInfo.height }\r\n}\r\n\r\nlet level1: { blocks: block, other: other[] } = {\r\n   blocks: {\r\n      name:\"level1\",      \r\n      // position: getPos(0,0.6)\r\n      position: getPos(0,0),\r\n      startPos: getPos(0.485,-0.05)\r\n   },\r\n   other: [\r\n\r\n      // -------------------\r\n      // helicopters\r\n      // -------------------\r\n\r\n      //non-shooting\r\n      { \r\n         type:\"helicopter\",\r\n         reversed:false,\r\n         position: getPos(0.5,-0.6),\r\n         moveable:false,\r\n         helType: \"non-shooting\"\r\n      },\r\n\r\n      { \r\n         type:\"helicopter\",\r\n         reversed:true,\r\n         position: getPos(0.4,-3.7),\r\n         moveable:true,\r\n         helType: \"non-shooting\"\r\n      },\r\n\r\n      // shooting\r\n      { \r\n         type:\"helicopter\",\r\n         reversed:true,\r\n         position: getPos(0.64,-1),\r\n         moveable:true,\r\n         helType: \"shooting\"\r\n      },\r\n      { \r\n         type:\"helicopter\",\r\n         reversed:false,\r\n         position: getPos(0.64,-3.9),\r\n         moveable:true,\r\n         helType: \"shooting\"\r\n      },\r\n\r\n\r\n      // ---------------\r\n      // ship\r\n      // ---------------\r\n      { \r\n         type:\"ship\",\r\n         reversed:false,\r\n         position: getPos(0.28,-0.8),\r\n         moveable:true\r\n      },\r\n\r\n      { \r\n         type:\"ship\",\r\n         reversed:true,\r\n         position: getPos(0.4,-2.8),\r\n         moveable:true\r\n      },\r\n\r\n\r\n      //---------------\r\n      // fighter plane\r\n      //---------------\r\n      { \r\n         type:\"fighterPlane\",\r\n         reversed:false,\r\n         position: getPos(0,-0.3),         \r\n      },\r\n\r\n      { \r\n         type:\"fighterPlane\",\r\n         reversed:false,\r\n         position: getPos(0,-1.8),         \r\n      },\r\n      { \r\n         type:\"fighterPlane\",\r\n         reversed:true,\r\n         position: getPos(0.9,-4.3),         \r\n      },\r\n    \r\n\r\n      //---------------\r\n      // ballon\r\n      //---------------\r\n      {\r\n         type:\"ballon\",\r\n         position:getPos(0.4, -2.5),\r\n         moveable:true,\r\n         reversed:false,\r\n      },\r\n      {\r\n         type:\"ballon\",\r\n         position:getPos(0.4, -2),\r\n         moveable:false,\r\n         reversed:false,\r\n      },\r\n      {\r\n         type:\"ballon\",\r\n         position:getPos(0.4, -3.3),\r\n         moveable:true,\r\n         reversed:true,\r\n      },\r\n\r\n      //---------------\r\n      // fuels\r\n      //---------------\r\n      { \r\n         type:\"fuel\",\r\n         position: getPos(0.6,-2.3)\r\n      },\r\n      { \r\n         type:\"fuel\",\r\n         position: getPos(0.4,-1.8)\r\n      },\r\n      { \r\n         type:\"fuel\",\r\n         position: getPos(0.55,-3)\r\n      },\r\n      { \r\n         type:\"fuel\",\r\n         position: getPos(0.6,-4.7)\r\n      },\r\n\r\n      //---------------\r\n      // tank\r\n      //---------------\r\n\r\n      { \r\n         type:\"tank\",\r\n         reversed:false,\r\n         tankType: \"normal\",\r\n         startPos:getPos(0.1, -1.43 ),\r\n         endPos:getPos(0.225, -1.43 ),\r\n         shotPos:getPos(0.5, -1.38),\r\n      },\r\n\r\n      { \r\n         type:\"tank\",\r\n         reversed:false,\r\n         tankType: \"normal\",\r\n         startPos:getPos(0.1, -2.6 ),\r\n         endPos:getPos(0.225, -2.6 ),\r\n         shotPos:getPos(0.7, -2.55),\r\n      },\r\n      { \r\n         type:\"tank\",\r\n         reversed:true,\r\n         tankType: \"normal\",\r\n         startPos:getPos(0.9, -3.5 ),\r\n         endPos:getPos(0.74, -3.5 ),\r\n         shotPos:getPos(0.65, -3.45),\r\n      },\r\n   ]\r\n}\r\n\r\nexport default level1","export default class Vector2 {   \r\n   constructor(public x = 0, public y = 0) {}\r\n\r\n   normalize() {\r\n      let length = Math.sqrt(Math.pow(this.x, 2) + Math.pow(this.y, 2));\r\n\r\n      this.x = (1 / length) * this.x;\r\n      this.y = (1 / length) * this.y;\r\n\r\n      return this;\r\n   }\r\n   getLength() {\r\n      return Math.sqrt(Math.pow(this.x, 2) + Math.pow(this.y, 2));\r\n   }\r\n   clone() {\r\n      return new Vector2(this.x, this.y);\r\n   }\r\n   \r\n   distanceTo(vect2:Vector2) {\r\n      let x = Math.abs(this.x - vect2.x);\r\n      let y = Math.abs(this.y - vect2.y);\r\n\r\n      return Math.sqrt(Math.pow(x, 2) + Math.pow(y, 2));\r\n   }\r\n  \r\n   dot(vect2:Vector2) {      \r\n      return this.x * vect2.x + this.y * vect2.y;\r\n   }\r\n\r\n   angleTo(vect2:Vector2) {   \r\n      return Math.acos(this.dot(vect2) / (this.getLength() * vect2.getLength()));\r\n   }\r\n\r\n   getRotateAngle() {\r\n      return Math.atan2(this.y, this.x);\r\n   }\r\n   setRotateAngle(degree:number) {\r\n      this.x = Math.cos(degree) * this.getLength();\r\n      this.y = Math.sin(degree) * this.getLength();\r\n   }\r\n\r\n   \r\n   add(vect2:Vector2) {\r\n      this.x += vect2.x;\r\n      this.y += vect2.y;\r\n\r\n      // return new Vector2(this.x, this.y,);\r\n      return this;\r\n   }\r\n   \r\n   sub(vect2:Vector2) {\r\n      this.x -= vect2.x;\r\n      this.y -= vect2.y;\r\n\r\n      // return new Vector2(this.x, this.y,);\r\n      return this;\r\n   }\r\n\r\n   multiplyScalar(factor:number) {\r\n      this.x *= factor;\r\n      this.y *= factor;\r\n\r\n      // return new Vector2(this.x, this.y);\r\n      return this;\r\n   }\r\n}","import Camera from \"./Camera.js\";\r\nimport { imageData, mapDataInt, Mesh } from \"./interfaces..js\";\r\nimport Vector2 from \"./Vector2\";\r\n\r\n\r\n\r\nexport default class Image_Mesh implements Mesh {\r\n   image_info: {\r\n      source: HTMLImageElement;\r\n      width: number; height: number; x: number; y: number;\r\n   };\r\n   map_info: { width: number; height: number; x: number; y: number; z: number; };\r\n   imageRenderBool: boolean;\r\n\r\n\r\n   constructor(\r\n      image: HTMLImageElement,\r\n      { dx = 0, dy = 0, dz = 0, dw = 10, dh = 10 }: mapDataInt,\r\n      { sx = 0, sy = 0, sw = image.width, sh = image.height }: imageData\r\n   ) {\r\n      this.image_info = {\r\n         source: image,\r\n         width: sw,\r\n         height: sh,\r\n         x: sx,\r\n         y: sy,\r\n      };\r\n\r\n      this.map_info = {\r\n         width: dw,\r\n         height: dh,\r\n         x: dx,\r\n         y: dy,\r\n         z: dz,\r\n      };\r\n\r\n      this.imageRenderBool = sw == image.width && sh == image.height;\r\n      \r\n   }\r\n   get pos_vect() {\r\n      return new Vector2(this.map_info.x, this.map_info.y);\r\n   }\r\n   set pos_vect(val:Vector2){\r\n      this.map_info.x = val.x, \r\n      this.map_info.y = val.y\r\n   }\r\n\r\n   action(ctx: CanvasRenderingContext2D, camera: Camera) {\r\n      let { width, height, x, y } = this.map_info;\r\n      let { source, width: s_width, height: s_height, x: s_x, y: s_y } = this.image_info;\r\n\r\n\r\n      ctx.beginPath();\r\n      if (!this.imageRenderBool) {\r\n\r\n         ctx.drawImage(source,\r\n            s_x, s_y, s_width, s_height,\r\n            x - camera.x, y - camera.y, width, height\r\n         );\r\n      }\r\n      else {\r\n         ctx.drawImage(source, x - camera.x, y - camera.y, width, height)\r\n      }\r\n      ctx.closePath();    \r\n   }\r\n}\r\n\r\n\r\n\r\n","import Camera from \"../Camera\";\r\nimport Image_Mesh from \"../Image_Mesh\";\r\nimport { Mesh } from \"../interfaces.\";\r\n\r\n\r\nexport default class colorRaycaster {\r\n   html_dom: HTMLCanvasElement;\r\n   ctx: CanvasRenderingContext2D;\r\n   // bPaint: Mesh[];\r\n   constructor(\r\n      public aPaint: (Mesh[] | Mesh)[],\r\n      public bPaint: (Mesh[] | Mesh)[],\r\n      private camera: Camera,\r\n      width: number,\r\n      height: number,\r\n   ) {\r\n\r\n\r\n      this.html_dom = document.createElement(\"canvas\");\r\n      this.html_dom.width = width;\r\n      this.html_dom.height = height;\r\n\r\n      this.ctx = this.html_dom.getContext(\"2d\")!;\r\n   }\r\n\r\n   // getCollision(specificColor: number | null = null) {\r\n   getCollision(specificColor: number | null = null) {\r\n      this.ctx.clearRect(0, 0, this.html_dom.width, this.html_dom.height);\r\n      for (const el of this.aPaint.flat()) {\r\n         el.action(this.ctx, this.camera)\r\n      }\r\n      niceFor: for (const el of this.bPaint.flat()) {\r\n\r\n         let { width, height, x, y } = el.map_info\r\n\r\n         const imgData = this.ctx.getImageData(x - this.camera.x, y - this.camera.y, width!, height!);\r\n         el.action(this.ctx, this.camera)\r\n         const imgDataAfter = this.ctx.getImageData(x - this.camera.x, y - this.camera.y, width!, height!);\r\n\r\n         // console.log( imgData.data.length);\r\n\r\n\r\n         for (let i = 0; i < imgData.data.length; i += 4) {\r\n            let count = imgData.data[i] + imgData.data[i + 1] + imgData.data[i + 2];\r\n            let count1 = imgDataAfter.data[i] + imgDataAfter.data[i + 1] + imgDataAfter.data[i + 2];\r\n\r\n\r\n            // && count != 255 * 3\r\n            if (count != 0  && count != count1) {\r\n               return true;\r\n            }\r\n\r\n         }\r\n      }\r\n\r\n      return false\r\n   }\r\n}\r\n\r\nfunction colorRaycaster1(\r\n   aPaint: Mesh[],\r\n   bPaint: Mesh[],\r\n   camera: Camera,\r\n   width: number,\r\n   height: number,\r\n): boolean {\r\n   let html_dom = document.createElement(\"canvas\");\r\n\r\n   html_dom.width = width;\r\n   html_dom.height = height;\r\n\r\n   let ctx = html_dom.getContext(\"2d\")!;\r\n\r\n   for (const el of aPaint) {\r\n      el.action(ctx, camera)\r\n   }\r\n\r\n   niceFor: for (const el of bPaint) {\r\n\r\n      let { width, height, x, y } = el.map_info\r\n\r\n      const imgData = ctx.getImageData(x - camera.x, y - camera.y, width!, height!);\r\n      el.action(ctx, camera)\r\n      const imgDataAfter = ctx.getImageData(x - camera.x, y - camera.y, width!, height!);\r\n\r\n\r\n      for (let i = 0; i < imgData.data.length; i += 4) {\r\n         let count = imgData.data[i] + imgData.data[i + 1] + imgData.data[i + 2];\r\n         let count1 = imgDataAfter.data[i] + imgDataAfter.data[i + 1] + imgDataAfter.data[i + 2];\r\n\r\n         if (count != 0 && count != count1) {\r\n            return true;\r\n         }\r\n\r\n      }\r\n\r\n   }\r\n\r\n   return false\r\n}","import inRange from \"../../inRange\";\r\n\r\ninterface squareInt {\r\n   x: number,\r\n   y: number,\r\n   width: number,\r\n   height: number,\r\n}\r\n\r\nexport default function SquareSquareReycaster(square1: squareInt, square2: squareInt) {   \r\n   \r\n   if (\r\n      square1.x < square2.x + square2.width\r\n      && square1.x + square1.width > square2.x\r\n\r\n      && square1.y < square2.y + square2.height\r\n      && square1.y + square1.height > square2.y\r\n   ) {                  \r\n      return true;\r\n   }\r\n\r\n   return false\r\n}","// eslint-disable-next-line no-unused-vars\r\nimport Helicopter from \"../../modules/mapElements/enemies/Helicopter.js\";\r\nimport useSleep from \"../useSleep\";\r\nimport Camera from \"./Camera.js\";\r\nimport Image_Mesh from \"./Image_Mesh.js\";\r\nimport Scene from \"./Scene.js\";\r\n\r\ndeclare global {\r\n   interface CanvasRenderingContext2D {\r\n      webkitImageSmoothingEnabled: boolean,\r\n      mozImageSmoothingEnabled: boolean,\r\n   }\r\n}\r\n\r\n\r\nexport let renderer_functions: (() => void)[] = [];\r\nexport let renderer_functions_after: (() => void)[] = [];\r\n\r\nexport const TIME = {\r\n   last_time: Date.now(),\r\n   /** in milliseconds */\r\n   time_stamp: 0,\r\n};\r\n\r\nexport class Renderer {\r\n   html_dom: HTMLCanvasElement;\r\n   ctx: CanvasRenderingContext2D;\r\n   stopBool: boolean;\r\n   backgroundColor: string;\r\n   constructor(width: number, height: number, public scene: Scene, public camera: Camera) {\r\n      \r\n      this.html_dom = document.createElement(\"canvas\");\r\n      this.html_dom.width = width;\r\n      this.html_dom.height = height;\r\n\r\n      this.ctx = this.html_dom.getContext(\"2d\")!;\r\n      \r\n      \r\n      this.ctx.webkitImageSmoothingEnabled = false;\r\n      this.ctx.mozImageSmoothingEnabled = false;\r\n      this.ctx.imageSmoothingEnabled = false;\r\n      // this.ctx.transform(1, .2, .8, .5, 0, 0);\r\n\r\n      this.backgroundColor = \"blue\";\r\n\r\n\r\n      this.stopBool = false;\r\n      // this.stopBool = true;\r\n\r\n      this.render();\r\n   }\r\n   async render(scene: Scene = this.scene) {\r\n      // console.clear()\r\n      // console.time()\r\n      \r\n      let { width, height } = this.html_dom;\r\n\r\n      this.ctx.clearRect(0, 0, width, height);\r\n      this.ctx.fillStyle = this.backgroundColor;\r\n      this.ctx.fillRect(0, 0, width, height);\r\n\r\n\r\n      for (const iterator of renderer_functions) {\r\n         iterator();\r\n      }    \r\n\r\n\r\n      if (scene.mesh_array.length != 0) {\r\n         scene.mesh_array.sort((el, el1) => {\r\n            let { x, y, z } = el.map_info;\r\n            let { x: x1, y: y1, z: z1 } = el1.map_info;\r\n\r\n            if (\r\n               z - z1 >= 1 ||\r\n               (z - z1 == 0 && y - y1 >= 1) ||\r\n               (z - z1 == 0 && y - y1 == 0 && x - x1 >= 1)\r\n            ) {\r\n               return 1;\r\n            }\r\n\r\n            return -1;\r\n         });\r\n      }\r\n\r\n      scene.mesh_array.forEach(el => {         \r\n         el.action(this.ctx, this.camera);\r\n      });\r\n\r\n      for (const iterator of renderer_functions_after) {\r\n         iterator();\r\n      }\r\n\r\n      TIME.time_stamp = Date.now() - TIME.last_time;\r\n      TIME.last_time = Date.now();      \r\n      \r\n      \r\n      // console.timeEnd()\r\n      if (!this.stopBool) {         \r\n         requestAnimationFrame(() => {            \r\n            this.render();\r\n         });\r\n      }\r\n   }\r\n}\r\n","/**\r\n * @description stop the async code for chosen time\r\n * @param time time of sleep \r\n */\r\nexport default function useSleep(time:number){\r\n   return new Promise(resolve=>{\r\n      setTimeout(function(){\r\n         resolve(true)\r\n      },time)\r\n   })\r\n}","export default {\r\n   moveBool: true\r\n}","export class Keyboard_manager {\r\n   constructor() {\r\n      window.addEventListener(\"keydown\", this.onkeydown_e);\r\n      window.addEventListener(\"keyup\", this.onkeyup_e);\r\n   }   \r\n   onkeydown_e(e:KeyboardEvent) {    \r\n      if(e.code in Keys) e.preventDefault()  \r\n      Keys[(<keyof typeof Keys> e.code)] = true;\r\n   }   \r\n   onkeyup_e(e: KeyboardEvent) {\r\n      if(e.code in Keys) e.preventDefault()  \r\n      Keys[(<keyof typeof Keys> e.code)] = false;\r\n   }\r\n}\r\n\r\nnew Keyboard_manager();\r\n\r\nexport const Keys = {\r\n   KeyA: false,\r\n   KeyD: false,\r\n   KeyW: false,\r\n   KeyS: false,\r\n   KeyQ: false,\r\n   KeyE: false,\r\n   KeyZ: false,\r\n   KeyY: false,\r\n   KeyL: false,\r\n\r\n   Numpad8: false,\r\n   Numpad5: false,\r\n\r\n   Numpad4: false,\r\n   Numpad6: false,\r\n\r\n   Numpad7: false,\r\n   Numpad9: false,\r\n\r\n   ControlLeft: false,\r\n\r\n   Space:false,\r\n};","export default function audioLoader(link: string): Promise<HTMLAudioElement> {\r\n   return new Promise(resolve => {\r\n      let audio = new Audio(link);\r\n\r\n      audio.oncanplaythrough = () => {\r\n         resolve(audio)\r\n      }\r\n   })\r\n\r\n}","export default __webpack_public_path__ + \"audio/a494c5faac8ac608b2dd744a0fc6d275-crush.wav\";","export default __webpack_public_path__ + \"audio/a46641155fbf37be3ae62cad6a6e1928-enemyCrush.wav\";","export default __webpack_public_path__ + \"audio/ef3914272428a8269eeb848ee423bd77-flyNoise.wav\";","export default __webpack_public_path__ + \"audio/02795b1c02b48cfcfa02986ca0cbda01-flyStart.wav\";","export default __webpack_public_path__ + \"audio/3a69d06ab883c1c3eaf309451e707b01-Health.wav\";","export default __webpack_public_path__ + \"audio/a9dd9d4f92599f30773fab2d52db6ba9-strike.wav\";","export default __webpack_public_path__ + \"audio/1d052b84cce8c117346cfa604c5b91fb-tankStrike.wav\";","export default __webpack_public_path__ + \"audio/52feab03f0709c93df588194dfef3abf-helicopterStrike.wav\";","import audioLoader from \"../utils/audioLoader\";\r\n\r\nimport crush from \"../../audio/crush.wav\"\r\nimport enemyCrush from \"../../audio/enemyCrush.wav\"\r\n\r\nimport flyNoise from \"../../audio/flyNoise.wav\"\r\nimport flyStart from \"../../audio/flyStart.wav\"\r\n\r\nimport Health from \"../../audio/Health.wav\"\r\nimport strike from \"../../audio/strike.wav\"\r\nimport tankStrike from \"../../audio/tankStrike.wav\"\r\n\r\nimport helicopterStrike from \"../../audio/helicopterStrike.wav\"\r\n\r\n\r\n\r\nexport default class LoadAllAudio {\r\n   static audios: {\r\n      crush: HTMLAudioElement;\r\n      enemyCrush: HTMLAudioElement;\r\n\r\n      flyNoise: HTMLAudioElement;\r\n      flyStart: HTMLAudioElement;\r\n\r\n      Health: HTMLAudioElement;\r\n      strike: HTMLAudioElement;\r\n      tankStrike: HTMLAudioElement;\r\n\r\n      helicopterStrike: HTMLAudioElement;\r\n   };\r\n\r\n   static async getAudios() {\r\n      // await new Promise(async resolve => {\r\n         LoadAllAudio.audios = {\r\n            crush: await audioLoader(crush),\r\n            enemyCrush: await audioLoader(enemyCrush),\r\n\r\n            flyNoise: await audioLoader(flyNoise),\r\n            flyStart: await audioLoader(flyStart),\r\n\r\n            Health: await audioLoader(Health),\r\n            strike: await audioLoader(strike),\r\n            tankStrike: await audioLoader(tankStrike),\r\n\r\n            helicopterStrike: await audioLoader(helicopterStrike),\r\n         }\r\n\r\n      //    document.body.onclick = async () => {\r\n      //       resolve(true)\r\n      //    }\r\n      // })\r\n\r\n   }\r\n}","\r\n export default function img_loader(link: string):Promise<HTMLImageElement> {\r\n   return new Promise(resolve => {\r\n      let img = document.createElement(\"img\");\r\n      img.src = link;\r\n\r\n      img.onload = () => {\r\n         resolve(img);\r\n      };\r\n   });\r\n}","export default function imgReverse(image: HTMLImageElement,): HTMLImageElement {\r\n   let canvas = document.createElement('canvas');\r\n   canvas.width = image.width;\r\n   canvas.height = image.height;\r\n\r\n   let canvasContext = canvas.getContext('2d')!;\r\n\r\n\r\n   canvasContext.translate(image.width, 0);\r\n   canvasContext.scale(-1, 1);\r\n   canvasContext.drawImage(image, 0, 0);\r\n\r\n   let img = document.createElement('img');\r\n   img.src = canvas.toDataURL(\"image/png\");\r\n\r\n   return img\r\n   // return image\r\n}","export default __webpack_public_path__ + \"images/9870d92f394ec74bb9665b19a8b05f62-plane-straight.png\";","export default __webpack_public_path__ + \"images/d1e0b371532e3e9f38d831bc4bbef02b-plane-right.png\";","export default __webpack_public_path__ + \"images/15ebc884ca638449c6f7bceea7769230-plane-left.png\";","export default __webpack_public_path__ + \"images/8d7c90423d6887ef94945962d2994c36-plane-crash.png\";","export default __webpack_public_path__ + \"images/ee311af1445da2476f8cb5b6a7548e37-plane-level-pos.png\";","export default __webpack_public_path__ + \"images/106c2f115aa73d0cdc06477fd10cf443-helicopter1.png\";","export default __webpack_public_path__ + \"images/2f1881073dac1707625e9baa6c2963f1-helicopter2.png\";","export default __webpack_public_path__ + \"images/efba3f8cf0895e39519f11757a7224d3-fighterHelicopter1.png\";","export default __webpack_public_path__ + \"images/95aa30d90754015514f5726170838acd-fighterHelicopter2.png\";","export default __webpack_public_path__ + \"images/52b6c3a65320aabb6349328d74de3fc6-tank1.png\";","export default __webpack_public_path__ + \"images/1e6c9c15480d7eb67c689e64ba5f8f4d-tank2.png\";","export default __webpack_public_path__ + \"images/6686d9d1feb8b7678da5c23b775cdc72-tankBullet0.png\";","export default __webpack_public_path__ + \"images/63eeea7e6d18efc6c335e3ec584088d4-tankBullet1.png\";","export default __webpack_public_path__ + \"images/f0a8e349e179b0a9a41562f7750a0866-tankBullet2.png\";","export default __webpack_public_path__ + \"images/e4ab5704b4b3ea3acf3cd273fef4aaf2-tankBullet3.png\";","export default __webpack_public_path__ + \"images/77c83312205cd200f233b13fc5ae6cc8-tankBullet4.png\";","export default __webpack_public_path__ + \"images/9cdd47b60f6e4f0937b23ef6ed757178-tankBullet5.png\";","export default __webpack_public_path__ + \"images/976cfef2516357c1091ea7ad2c323f3c-tankBullet6.png\";","export default __webpack_public_path__ + \"images/77c18a9f107f3025303a64dfb5e8e8b6-ship.png\";","export default __webpack_public_path__ + \"images/864482f64d7425d9fef858dba4803673-fighterPlane.png\";","export default __webpack_public_path__ + \"images/7156877ae5d3275eab1d1a03b3036dbf-ballon.png\";","export default __webpack_public_path__ + \"images/4e0563b5894188453fb9ff5ab2a69e2f-fuel.png\";","export default __webpack_public_path__ + \"images/a355110ae7ecdcc3c495ab1888462184-bridge.png\";","export default __webpack_public_path__ + \"images/c7a4b1ab5b02b39d8c65f8e52a026ed1-gasStatusBar.png\";","export default __webpack_public_path__ + \"images/c6c71535ef238c47af70a1314e5e16fc-level1.png\";","export default __webpack_public_path__ + \"images/a56e63a727ed435b7b0d09f940065942-level2.png\";","import img_loader from \"../utils/img_loader\"\r\nimport imgReverse from \"../utils/imgReverse\"\r\n\r\n// -------------\r\n// plane\r\n// -------------\r\nimport planeStraight from \"../../images/plane/plane-straight.png\"\r\nimport planeRight from \"../../images/plane/plane-right.png\"\r\nimport planeLeft from \"../../images/plane/plane-left.png\"\r\nimport planeCrash from \"../../images/plane/plane-crash.png\"\r\nimport planeLevelPos from \"../../images/plane/plane-level-pos.png\"\r\n\r\n// -------------\r\n// helicopter\r\n// -------------\r\nimport helicopter1 from \"../../images/enemies/helicopter1.png\"\r\nimport helicopter2 from \"../../images/enemies/helicopter2.png\"\r\n\r\nimport fighterHelicopter1 from \"../../images/enemies/fighterHelicopter1.png\"\r\nimport fighterHelicopter2 from \"../../images/enemies/fighterHelicopter2.png\"\r\n\r\n// -------------\r\n// tank\r\n// -------------\r\nimport tank1 from \"../../images/enemies/tank1.png\"\r\nimport tank2 from \"../../images/enemies/tank2.png\"\r\n\r\nimport tankBullet0 from \"../../images/enemies/tankBullet/tankBullet0.png\"\r\nimport tankBullet1 from \"../../images/enemies/tankBullet/tankBullet1.png\"\r\nimport tankBullet2 from \"../../images/enemies/tankBullet/tankBullet2.png\"\r\nimport tankBullet3 from \"../../images/enemies/tankBullet/tankBullet3.png\"\r\nimport tankBullet4 from \"../../images/enemies/tankBullet/tankBullet4.png\"\r\nimport tankBullet5 from \"../../images/enemies/tankBullet/tankBullet5.png\"\r\nimport tankBullet6 from \"../../images/enemies/tankBullet/tankBullet6.png\"\r\n\r\n// -------------\r\n// enemies\r\n// -------------\r\nimport ship from \"../../images/enemies/ship.png\"\r\nimport fighterPlane from \"../../images/enemies/fighterPlane.png\"\r\nimport ballon from \"../../images/enemies/ballon.png\"\r\n\r\nimport fuel from \"../../images/fuel.png\"\r\nimport bridge from \"../../images/bridge.png\"\r\n\r\nimport gasStatusBar from \"../../images/gasStatusBar.png\"\r\n\r\n// -------------\r\n// levels\r\n// -------------\r\nimport level1 from \"../../images/levels/level1.png\"\r\nimport level2 from \"../../images/levels/level2.png\"\r\n\r\n\r\nexport let allImages: {\r\n   plane: {\r\n      straight: HTMLImageElement;\r\n      left: HTMLImageElement;\r\n      right: HTMLImageElement;\r\n      crash: HTMLImageElement;\r\n      levelPos: HTMLImageElement;\r\n   };\r\n   enemies: {\r\n      helicopter: {\r\n         normal: HTMLImageElement[];\r\n         reversed: HTMLImageElement[]\r\n      };\r\n      fighterHelicopter: {\r\n         normal: HTMLImageElement[];\r\n         reversed: HTMLImageElement[]\r\n      },\r\n      ship: {\r\n         normal: HTMLImageElement;\r\n         reversed: HTMLImageElement\r\n      };\r\n      tank: {\r\n         bullets: HTMLImageElement[],\r\n         normal: HTMLImageElement[];\r\n         reversed: HTMLImageElement[]\r\n      };\r\n      fighterPlane: {\r\n         normal: HTMLImageElement;\r\n         reversed: HTMLImageElement\r\n      };\r\n      ballon: HTMLImageElement;\r\n   };\r\n   levels: {\r\n      [x: string]: HTMLImageElement\r\n   };\r\n   fuel: HTMLImageElement;\r\n   bridge: HTMLImageElement;\r\n   gasStatusBar: HTMLImageElement;\r\n}\r\n\r\nexport async function loadAllImages() {\r\n   allImages = {\r\n      plane: {\r\n         straight: await img_loader(planeStraight),\r\n         left: await img_loader(planeLeft),\r\n         right: await img_loader(planeRight),\r\n         crash: await img_loader(planeCrash),\r\n         levelPos: await img_loader(planeLevelPos)\r\n      },\r\n      enemies: {\r\n         helicopter: {\r\n            normal: [\r\n               await img_loader(helicopter1),\r\n               await img_loader(helicopter2),\r\n            ],\r\n            reversed: [\r\n               imgReverse(await img_loader(helicopter1)),\r\n               imgReverse(await img_loader(helicopter2))\r\n            ],\r\n         },\r\n         fighterHelicopter: {\r\n            normal: [\r\n               await img_loader(fighterHelicopter1),\r\n               await img_loader(fighterHelicopter2),\r\n            ],\r\n            reversed: [\r\n               imgReverse(await img_loader(fighterHelicopter1)),\r\n               imgReverse(await img_loader(fighterHelicopter2))\r\n            ],\r\n         },\r\n         ship: {\r\n            normal: await img_loader(ship),\r\n            reversed: imgReverse(await img_loader(ship))\r\n         },\r\n         tank: {\r\n            bullets: [\r\n               await img_loader(tankBullet0),\r\n               await img_loader(tankBullet1),\r\n               await img_loader(tankBullet2),\r\n               await img_loader(tankBullet3),\r\n               await img_loader(tankBullet4),\r\n               await img_loader(tankBullet5),\r\n               await img_loader(tankBullet6)\r\n            ],\r\n            normal: [\r\n               await img_loader(tank1),\r\n               await img_loader(tank2),\r\n            ],\r\n            reversed: [\r\n               imgReverse(await img_loader(tank1)),\r\n               imgReverse(await img_loader(tank2))\r\n            ],\r\n         },\r\n         fighterPlane: {\r\n            normal: imgReverse(await img_loader(fighterPlane)),\r\n            reversed: await img_loader(fighterPlane),\r\n         },\r\n         ballon: await img_loader(ballon),\r\n      },\r\n      levels: {\r\n         level1: await img_loader(level1),\r\n         level2: await img_loader(level2)\r\n      },\r\n      fuel: await img_loader(fuel),\r\n      bridge: await img_loader(bridge),\r\n      gasStatusBar: await img_loader(gasStatusBar),\r\n   }\r\n}","import { mainInstance } from \"../../Main\";\r\nimport Camera from \"../../utils/TwoJS/Camera\";\r\nimport Image_Mesh from \"../../utils/TwoJS/Image_Mesh\";\r\nimport { Mesh } from \"../../utils/TwoJS/interfaces.\";\r\nimport colorRaycaster from \"../../utils/TwoJS/raycaster/colorRaycaster\";\r\nimport squarePolygonReycaster from \"../../utils/TwoJS/raycaster/squarePolygonReycaster\";\r\nimport SquareSquareReycaster from \"../../utils/TwoJS/raycaster/squareSquareReycaster\";\r\nimport { renderer_functions, renderer_functions_after } from \"../../utils/TwoJS/Renderer\";\r\nimport mapInfo from \"../constants/mapInfo\";\r\nimport Ship from \"./enemies/Ship\";\r\n\r\nexport default class Bullet implements Mesh {\r\n   map_info: { width: number; height: number; x: number; y: number; z: number; };\r\n   colider: colorRaycaster;\r\n\r\n   constructor(x: number, y: number) {\r\n      this.map_info = {\r\n         width: 5,\r\n         height: 10,\r\n         x: x,\r\n         y: y,\r\n         z: 3,\r\n      }\r\n\r\n      this.move = this.move.bind(this);\r\n      renderer_functions.push(this.move)\r\n\r\n\r\n      this.colider = new colorRaycaster(mainInstance.blocks, [this], mainInstance.camera, mapInfo.width, mapInfo.height);\r\n   }\r\n\r\n   action(ctx: CanvasRenderingContext2D, camera: Camera) {\r\n      const { width, height, x, y } = this.map_info\r\n\r\n      ctx.beginPath();\r\n      ctx.fillStyle = \"yellow\";\r\n      ctx.rect(x - camera.x, y - camera.y, width, height);\r\n      ctx.fill();\r\n   }\r\n\r\n   move() {      \r\n\r\n      this.map_info.x = mainInstance.player.map_info.x + mainInstance.player.map_info.width/2 - this.map_info.width/2\r\n      this.map_info.y -= 20;\r\n      if (this.map_info.y - mainInstance.camera.y < 0) {\r\n         mainInstance.scene.remove(this);\r\n         renderer_functions.removeIf(el => el == this.move)\r\n      }\r\n      else {\r\n         this.checkCollision();\r\n      }           \r\n   }\r\n\r\n   checkCollision() {\r\n      for (const enemy of [...mainInstance.enemies, ...mainInstance.fuels]) {\r\n         \r\n         if (SquareSquareReycaster(enemy.map_info, this.map_info)) {\r\n            enemy.destroy();\r\n            mainInstance.scene.remove(this);\r\n            renderer_functions.removeIf(el => el == this.move)\r\n            return\r\n         }\r\n      }\r\n\r\n      if (this.colider.getCollision()) {\r\n         mainInstance.scene.remove(this);\r\n         renderer_functions.removeIf(el => el == this.move)         \r\n      }      \r\n   }\r\n}","import { mainInstance } from \"../../Main\";\r\nimport { Mesh } from \"../../utils/TwoJS/interfaces.\";\r\nimport useSleep from \"../../utils/useSleep\";\r\nimport LoadAllAudio from \"../LoadAllAudio\";\r\nimport Player from \"./Player\";\r\n\r\n\r\ninterface alternativeMesh {\r\n   image_info: {\r\n      source: HTMLImageElement;\r\n      width: number; height: number; x: number; y: number;\r\n   };\r\n}\r\n\r\nexport default function destroyAnimation(callable = function (this: any) {\r\n   mainInstance.scene.remove(<Mesh><unknown>this);\r\n}) {\r\n\r\n   return function (target: any, name: string, descriptor: any) {      \r\n\r\n      let func = descriptor.value;\r\n\r\n      descriptor.value = async function (this: alternativeMesh, ...args: any[]) {\r\n\r\n         if (!(this instanceof Player)) {\r\n            let audio = <HTMLAudioElement>LoadAllAudio.audios.enemyCrush.cloneNode(true);\r\n            audio.play()\r\n         }\r\n         \r\n         func.bind(this)();\r\n\r\n         let canvas = document.createElement(\"canvas\");\r\n         canvas.width = this.image_info.source.width;\r\n         canvas.height = this.image_info.source.height;\r\n\r\n         let ctx = canvas.getContext(\"2d\")!;\r\n         \r\n         for (let x = 1; x < 5; x++) {\r\n            ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n            ctx.drawImage(this.image_info.source, 0, 0);\r\n            const imgData = ctx.getImageData(0, 0, canvas.width, canvas.height);\r\n            ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n            const imgData1 = ctx.getImageData(0, 0, canvas.width, canvas.height);            \r\n\r\n            for (let y = 0; y < imgData.data.length; y += 4 * Math.ceil(x * Math.random())) {               \r\n\r\n               imgData1.data[y] = imgData.data[y];\r\n               imgData1.data[y + 1] = imgData.data[y + 1];\r\n               imgData1.data[y + 2] = imgData.data[y + 2];\r\n               imgData1.data[y + 3] = imgData.data[y + 3];\r\n            }            \r\n          \r\n            ctx.putImageData(imgData1, 0, 0);\r\n\r\n            let img = document.createElement(\"img\");\r\n            img.src = canvas.toDataURL(\"image/png\");\r\n\r\n            this.image_info.source = img;\r\n\r\n            await useSleep(100);\r\n         }\r\n\r\n         callable.bind(this)();\r\n      }\r\n   }\r\n}","import { mainInstance } from \"../../Main\";\r\nimport inRange from \"../../utils/inRange\";\r\nimport Image_Mesh from \"../../utils/TwoJS/Image_Mesh\";\r\nimport colorRaycaster from \"../../utils/TwoJS/raycaster/colorRaycaster\";\r\nimport squarePolygonReycaster from \"../../utils/TwoJS/raycaster/squarePolygonReycaster\";\r\nimport SquareSquareReycaster from \"../../utils/TwoJS/raycaster/squareSquareReycaster\";\r\nimport { renderer_functions, renderer_functions_after } from \"../../utils/TwoJS/Renderer\";\r\nimport useSleep from \"../../utils/useSleep\";\r\nimport mapInfo from \"../constants/mapInfo\";\r\nimport GameConfig from \"../GameConfig\";\r\nimport { Keys } from \"../KeyboardManager\";\r\nimport LoadAllAudio from \"../LoadAllAudio\";\r\nimport { allImages } from \"../loadAllImages\";\r\nimport Bullet from \"./Bullet\";\r\nimport destroyAnimation from \"./destroyAnimation\";\r\n\r\n\r\n\r\nexport default class Player extends Image_Mesh {\r\n   plane: {\r\n      straight: HTMLImageElement; left: HTMLImageElement;\r\n      right: HTMLImageElement; crash: HTMLImageElement;\r\n   };\r\n   lastShot: number;\r\n   deltaShot: number;\r\n   enemyColider: colorRaycaster;\r\n   startPosition: { x: number; y: number; };\r\n\r\n   constructor() {\r\n      const { plane } = allImages;\r\n      let ratio = plane.straight.width / plane.straight.height\r\n\r\n\r\n      super(plane.straight, {\r\n         dx: 0.47 * mapInfo.width,\r\n         dy: 0.65 * mapInfo.height,\r\n         dz: 2,\r\n         dw: 30,\r\n         dh: 30\r\n      }, {})\r\n\r\n      this.startPosition = { x: this.map_info.x, y: this.map_info.y, }\r\n      this.plane = plane\r\n\r\n      this.deltaShot = 200;\r\n      this.lastShot = Date.now()\r\n\r\n      this.enemyColider = new colorRaycaster([mainInstance.enemies, mainInstance.blocks], [this], mainInstance.camera, mapInfo.width, mapInfo.height)\r\n\r\n\r\n      renderer_functions.push(this.playerMove.bind(this))\r\n\r\n      this.init()\r\n   }\r\n   async init() {     \r\n\r\n      LoadAllAudio.audios.flyStart.play();\r\n      LoadAllAudio.audios.flyStart.onended = () => {\r\n         if (!GameConfig.moveBool) { return }\r\n\r\n         LoadAllAudio.audios.flyNoise.loop = true;\r\n         LoadAllAudio.audios.flyNoise.play();\r\n      }\r\n   }\r\n\r\n\r\n   async playerMove() {\r\n      if (!GameConfig.moveBool) { return }\r\n\r\n      let find = mainInstance.blocks.findIndex(el => (\r\n         inRange(this.map_info.y, el.map_info.y, el.map_info.y + el.map_info.height)\r\n      ))      \r\n\r\n\r\n      if (find >= 0) {\r\n         mainInstance.scoreBoard.levelPos = find + 1\r\n      }\r\n\r\n      // --------------------\r\n      // up down movement\r\n      // --------------------\r\n      if (Keys.KeyW) {\r\n         this.map_info.y -= 5\r\n         mainInstance.camera.y -= 5\r\n      }\r\n      else if (Keys.KeyS) {\r\n         this.map_info.y -= 1\r\n         mainInstance.camera.y -= 1\r\n      }\r\n      else {\r\n         this.map_info.y -= 3\r\n         mainInstance.camera.y -= 3\r\n      }\r\n\r\n      // --------------------\r\n      // left right movement\r\n      // --------------------\r\n      if (Keys.KeyA) {\r\n         this.map_info.x -= 5         \r\n         this.image_info.source = this.plane.left         \r\n      }\r\n      else if (Keys.KeyD) {\r\n         this.map_info.x += 5\r\n         this.image_info.source = this.plane.right\r\n      }\r\n      else {\r\n         this.image_info.source = this.plane.straight\r\n      }\r\n\r\n\r\n      // --------------------\r\n      // strike enemy\r\n      // --------------------\r\n      if (Keys.Space && Date.now() - this.lastShot > this.deltaShot) {\r\n         let audio = <HTMLAudioElement>LoadAllAudio.audios.strike.cloneNode(true);\r\n         audio.play()\r\n\r\n         const { x, y, width } = this.map_info\r\n         let x1 = x + (width) / 2\r\n         let bullet = new Bullet(x1, y)\r\n\r\n         mainInstance.scene.add(bullet)\r\n\r\n         this.lastShot = Date.now()\r\n      }\r\n\r\n\r\n      // --------------------\r\n      // collision with enemy\r\n      // --------------------\r\n      let colideEnemy = mainInstance.enemies.find(el => {\r\n         this.enemyColider.aPaint = [el]\r\n         return this.enemyColider.getCollision()\r\n      })\r\n\r\n      if (colideEnemy != undefined) {\r\n         colideEnemy.destroy()\r\n         this.checkLives()\r\n      }\r\n      else {\r\n         this.enemyColider.aPaint = mainInstance.blocks\r\n\r\n         if (this.enemyColider.getCollision()) {\r\n            this.checkLives();\r\n         }\r\n      }\r\n\r\n\r\n      // --------------------\r\n      // collision with fuel\r\n      // --------------------\r\n      if (mainInstance.fuels.some(el => SquareSquareReycaster(el.map_info, this.map_info))) {\r\n         mainInstance.scoreBoard.addFuel();\r\n      }\r\n   }\r\n\r\n   @destroyAnimation(function (this: Player) {\r\n      mainInstance.scene.remove(this);      \r\n\r\n\r\n      if (mainInstance.scoreBoard.lives <= 0) {\r\n         mainInstance.scoreBoard.lives = 0\r\n\r\n         if (mainInstance.scoreBoard.HighScore < mainInstance.scoreBoard.score) {\r\n            mainInstance.scoreBoard.HighScore = mainInstance.scoreBoard.score\r\n         }\r\n\r\n      }\r\n      else {\r\n         this.restartGame();\r\n      }\r\n   })\r\n   checkLives() {      \r\n      for (const key in LoadAllAudio.audios) {         \r\n         let audio = LoadAllAudio.audios[(<keyof typeof LoadAllAudio.audios> key)]\r\n         audio.pause(); \r\n         audio.currentTime = 0\r\n      }\r\n      LoadAllAudio.audios.crush.play()\r\n      GameConfig.moveBool = false\r\n   }\r\n\r\n   async restartGame() {\r\n\r\n      await useSleep(1000);\r\n     \r\n      mainInstance.scoreBoard.lives--\r\n      mainInstance.scoreBoard.fuelStatus = 1\r\n      \r\n      GameConfig.moveBool = true\r\n\r\n      mainInstance.paintMap();\r\n   }\r\n}","/**\r\n * @description used to show if target number is in range\r\n * @param number target number\r\n * @param begin begin of range\r\n * @param end end of range\r\n */\r\n export default function inRange(number:number, begin:number, end:number) {\r\n   if (number >= begin && number <= end) return true;\r\n   else return false;\r\n}","import { Keys } from \"../../modules/KeyboardManager\";\r\nimport { renderer_functions } from \"./Renderer\";\r\n\r\nexport default class Camera{ \r\n   // constructor (public x:number=0, public y:number=-3100){\r\n   constructor (public x:number=0, public y:number=0){                 \r\n   }\r\n}","import Image_Mesh from \"./Image_Mesh\";\r\nimport { Mesh } from \"./interfaces.\";\r\n\r\n// type Mesh = Image_Mesh\r\n\r\n\r\n\r\nexport default class Scene {\r\n   mesh_array: Mesh[] = [];\r\n\r\n   add(...meshes:Mesh[]) {\r\n      this.mesh_array.push(...meshes);\r\n   }\r\n\r\n\r\n   remove(mesh:Mesh) {\r\n      this.mesh_array = this.mesh_array.filter(el => el != mesh);\r\n   }\r\n}","import { mainInstance } from \"../../Main\";\r\nimport Image_Mesh from \"../../utils/TwoJS/Image_Mesh\";\r\nimport { mapDataInt } from \"../../utils/TwoJS/interfaces.\";\r\nimport { renderer_functions } from \"../../utils/TwoJS/Renderer\";\r\nimport destroyAnimation from \"./destroyAnimation\";\r\nimport EnemiesConfig from \"../GameConfig\";\r\nimport Helicopter from \"./enemies/Helicopter\";\r\n\r\nexport default abstract class Enemy extends Image_Mesh {\r\n   abstract movable: boolean;\r\n   distanceToPlayer:number = 500;\r\n\r\n   constructor(image: HTMLImageElement, mapData: mapDataInt) {\r\n      super(image, mapData, {})\r\n\r\n      this.activate = this.activate.bind(this)\r\n      this.move = this.move.bind(this)\r\n      // this.after = this.after.bind(this)\r\n\r\n      renderer_functions.push(this.activate)\r\n   }\r\n\r\n   fly(){}\r\n\r\n   abstract move(): void\r\n\r\n   private activate() {      \r\n\r\n      if (\r\n         Math.abs(mainInstance.player.map_info.y - this.map_info.y) < this.distanceToPlayer\r\n         && this.movable\r\n         && this.map_info.y - mainInstance.camera.y < mainInstance.renderer.html_dom.height - this.map_info.height\r\n         && this.map_info.y - mainInstance.camera.y > 0 \r\n         && EnemiesConfig.moveBool\r\n      ) {\r\n         this.move();         \r\n      }\r\n\r\n      if (!this.movable) renderer_functions.removeIf(el => el == this.activate)\r\n   } \r\n\r\n   @destroyAnimation()\r\n   destroy() {\r\n      renderer_functions.removeIf(el => el == this.activate)\r\n\r\n      renderer_functions.removeIf(el => el == this.fly)            \r\n\r\n      mainInstance.scoreBoard.score += 200;      \r\n      mainInstance.enemies.removeIf(el => el == this)\r\n   }\r\n}\r\n","import { mainInstance } from \"../../../Main\";\r\nimport Camera from \"../../../utils/TwoJS/Camera\";\r\nimport { Mesh } from \"../../../utils/TwoJS/interfaces.\";\r\nimport colorRaycaster from \"../../../utils/TwoJS/raycaster/colorRaycaster\";\r\nimport SquareSquareReycaster from \"../../../utils/TwoJS/raycaster/squareSquareReycaster\";\r\nimport { renderer_functions } from \"../../../utils/TwoJS/Renderer\";\r\nimport mapInfo from \"../../constants/mapInfo\";\r\nimport LoadAllAudio from \"../../LoadAllAudio\";\r\n\r\nexport default class fighterHelicopterBullet implements Mesh {\r\n   map_info: { width: number; height: number; x: number; y: number; z: number; };\r\n   colider: colorRaycaster;\r\n   reversed: boolean;\r\n\r\n   constructor(x: number, y: number, reversed: boolean, colider: colorRaycaster) {\r\n      this.map_info = {\r\n         width: 10,\r\n         height: 5,\r\n         x: reversed ? x - 10 : x,\r\n         y: y,\r\n         z: 3,\r\n      }\r\n\r\n      this.reversed = reversed\r\n      this.move = this.move.bind(this);\r\n      renderer_functions.push(this.move)\r\n\r\n      // this.colider = new colorRaycaster(mainInstance.blocks, [this], mainInstance.camera, mapInfo.width, mapInfo.height);\r\n      this.colider = colider;\r\n\r\n      let audio = <HTMLAudioElement>LoadAllAudio.audios.helicopterStrike.cloneNode(true);\r\n      audio.play()\r\n   }\r\n\r\n   action(ctx: CanvasRenderingContext2D, camera: Camera) {\r\n      const { width, height, x, y } = this.map_info\r\n\r\n      ctx.beginPath();\r\n      ctx.fillStyle = \"yellow\";\r\n      ctx.rect(x - camera.x, y - camera.y, width, height);\r\n      ctx.fill();\r\n   }\r\n\r\n   move() {\r\n\r\n      this.map_info.x += this.reversed ? -20 : 20;\r\n\r\n      if (this.map_info.y - mainInstance.camera.y < 0) {\r\n         mainInstance.scene.remove(this);\r\n         renderer_functions.removeIf(el => el == this.move)\r\n      }\r\n      else {\r\n         this.checkCollision();\r\n      }\r\n   }\r\n\r\n   checkCollision() {\r\n\r\n\r\n      if (SquareSquareReycaster(mainInstance.player.map_info, this.map_info)) {         \r\n         mainInstance.player.checkLives();\r\n         mainInstance.scene.remove(this);\r\n         renderer_functions.removeIf(el => el == this.move)\r\n         return\r\n      }\r\n\r\n      this.colider.aPaint = mainInstance.blocks;\r\n      this.colider.bPaint = [this]\r\n\r\n      if (this.colider.getCollision()) {\r\n         mainInstance.scene.remove(this);\r\n         renderer_functions.removeIf(el => el == this.move)\r\n      }\r\n   }\r\n}","import { mainInstance } from \"../../../Main\";\r\nimport Image_Mesh from \"../../../utils/TwoJS/Image_Mesh\";\r\nimport { mapDataInt } from \"../../../utils/TwoJS/interfaces.\";\r\nimport colorRaycaster from \"../../../utils/TwoJS/raycaster/colorRaycaster\";\r\nimport squarePolygonReycaster from \"../../../utils/TwoJS/raycaster/squarePolygonReycaster\";\r\nimport { renderer_functions } from \"../../../utils/TwoJS/Renderer\";\r\nimport { helType } from \"../../constants/Levels/levelInt\";\r\nimport mapInfo from \"../../constants/mapInfo\";\r\nimport { allImages } from \"../../loadAllImages\";\r\nimport Enemy from \"../Enemy\";\r\nimport fighterHelicopterBullet from \"./fighterHelicopterBullet\";\r\n// Image_Mesh\r\nexport default class Helicopter extends Enemy {\r\n   movable: boolean;\r\n   reverse: boolean;\r\n   dateNow: number;\r\n   timeStamp: number;\r\n   colider: colorRaycaster;\r\n   helType: helType;\r\n   deltaShot: number;\r\n   lastShot: number;\r\n   bulletColider!: colorRaycaster;\r\n\r\n   constructor(reverse: boolean, movable: boolean, helType: helType, { x, y }: { x: number, y: number }) {\r\n\r\n      const helicopter = allImages.enemies[helType == \"non-shooting\" ? \"helicopter\" : \"fighterHelicopter\"]\r\n      let startPos = reverse ? helicopter.reversed : helicopter.normal\r\n\r\n      let ratio = startPos[0].width / startPos[0].height;\r\n      let width = 40\r\n\r\n      super(startPos[0], { dx: x, dy: y, dz: 2, dw: width, dh: width / ratio });\r\n\r\n\r\n      // -----------------------------\r\n      // push to this\r\n      // -----------------------------\r\n      this.movable = movable;\r\n      this.reverse = reverse;\r\n      this.helType = helType;\r\n      this.dateNow = Date.now();\r\n      this.timeStamp = 100\r\n      this.colider = new colorRaycaster(mainInstance.blocks, [this], mainInstance.camera, mapInfo.width, mapInfo.height);\r\n\r\n      if (this.helType == \"shooting\") {\r\n         this.bulletColider = new colorRaycaster(mainInstance.blocks, [this], mainInstance.camera, mapInfo.width, mapInfo.height)\r\n      }\r\n\r\n      // ---------------------\r\n      // strike Enemy\r\n      // ---------------------\r\n      this.deltaShot = 200;\r\n      this.lastShot = Date.now()\r\n\r\n\r\n      this.fly = this.fly.bind(this)\r\n\r\n      renderer_functions.push(this.fly)\r\n   }\r\n   fly() {\r\n      const helicopter = allImages.enemies[this.helType == \"non-shooting\" ? \"helicopter\" : \"fighterHelicopter\"]\r\n\r\n      let stateString: \"reversed\" | \"normal\" = this.reverse ? \"reversed\" : \"normal\"\r\n\r\n      if (Date.now() - this.dateNow > this.timeStamp) {\r\n         if (this.image_info.source == helicopter[stateString][0]) {\r\n            this.image_info.source = helicopter[stateString][1]\r\n         }\r\n         else {\r\n            this.image_info.source = helicopter[stateString][0]\r\n         }\r\n         this.dateNow = Date.now()\r\n      }\r\n   }\r\n\r\n   move(): void {\r\n      let { x, y, width, height } = this.map_info\r\n      x += this.reverse ? -5 : 5;\r\n\r\n      if (this.colider.getCollision()) {\r\n         this.reverse = !this.reverse\r\n      }\r\n\r\n      this.map_info.x += this.reverse ? -5 : 5;\r\n      if (this.helType == \"shooting\") this.strike();\r\n   }\r\n   strike() {\r\n      if (Date.now() - this.lastShot > this.deltaShot) {\r\n         const { x, y, width, height } = this.map_info\r\n         let x1 = this.reverse ? this.map_info.x : x + width\r\n\r\n         let bullet = new fighterHelicopterBullet(x1, y + height / 2, this.reverse, this.bulletColider)\r\n         mainInstance.scene.add(bullet)\r\n\r\n         this.lastShot = Date.now()\r\n      }\r\n   }\r\n}","import { mainInstance } from \"../../../Main\";\r\nimport Image_Mesh from \"../../../utils/TwoJS/Image_Mesh\";\r\nimport { mapDataInt } from \"../../../utils/TwoJS/interfaces.\";\r\nimport colorRaycaster from \"../../../utils/TwoJS/raycaster/colorRaycaster\";\r\nimport squarePolygonReycaster from \"../../../utils/TwoJS/raycaster/squarePolygonReycaster\";\r\nimport { renderer_functions } from \"../../../utils/TwoJS/Renderer\";\r\nimport mapInfo from \"../../constants/mapInfo\";\r\nimport { allImages } from \"../../loadAllImages\";\r\nimport Enemy from \"../Enemy\";\r\n\r\n\r\nexport default class Ship extends Enemy {\r\n   movable: boolean;\r\n   reverse: boolean;\r\n   colider: colorRaycaster;\r\n\r\n   constructor(reverse: boolean, movable: boolean, { x, y }: { x: number, y: number }) {      \r\n\r\n      const { ship } = allImages.enemies;\r\n      let startPos = reverse ? ship.reversed : ship.normal      \r\n      let ratio = startPos.width / startPos.height;\r\n      let width = 100\r\n\r\n      super(startPos, { dx: x, dy: y, dz: 2, dw: width, dh: width / ratio });      \r\n      \r\n\r\n      // -----------------------------\r\n      // push to this\r\n      // -----------------------------\r\n      this.movable = movable;\r\n      this.reverse = reverse;\r\n      this.colider = new colorRaycaster(mainInstance.blocks, [this], mainInstance.camera, mapInfo.width, mapInfo.height);\r\n   }\r\n\r\n   move(): void {\r\n      const { ship } = allImages.enemies;\r\n      \r\n\r\n      let { x, y, width, height } = this.map_info\r\n\r\n      x += this.reverse ? -5 : 5;\r\n      \r\n      // if (this.colider.getCollision()) {\r\n      if (this.getCollision()) {\r\n         this.reverse = !this.reverse\r\n\r\n         this.image_info.source = this.reverse ? ship.reversed : ship.normal\r\n      }\r\n\r\n      this.map_info.x += this.reverse ? -5 : 5;\r\n   }\r\n   getCollision(){\r\n      const { ship } = allImages.enemies;\r\n      let col1 = this.colider.getCollision();\r\n      this.image_info.source = this.image_info.source == ship.normal ? ship.reversed : ship.normal\r\n      let col2 = this.colider.getCollision();\r\n      this.image_info.source = this.image_info.source == ship.normal ? ship.reversed : ship.normal\r\n\r\n      return col1 || col2\r\n   }\r\n}","import { mainInstance } from \"../../../Main\";\r\nimport Image_Mesh from \"../../../utils/TwoJS/Image_Mesh\";\r\nimport { mapDataInt } from \"../../../utils/TwoJS/interfaces.\";\r\nimport squarePolygonReycaster from \"../../../utils/TwoJS/raycaster/squarePolygonReycaster\";\r\nimport { renderer_functions } from \"../../../utils/TwoJS/Renderer\";\r\nimport mapInfo from \"../../constants/mapInfo\";\r\nimport { allImages } from \"../../loadAllImages\";\r\nimport Enemy from \"../Enemy\";\r\n// Image_Mesh\r\nexport default class FighterPlane extends Enemy {\r\n   movable: boolean;\r\n   reverse: boolean;   \r\n\r\n   constructor(reverse: boolean, { x, y }: { x: number, y: number }) {\r\n\r\n      const { fighterPlane } = allImages.enemies;\r\n      let startPos = reverse ? fighterPlane.reversed : fighterPlane.normal      \r\n\r\n      let ratio = startPos.width / startPos.height;\r\n      let width = 50\r\n      \r\n      super(startPos, { dx: x, dy: y, dz: 2, dw: width, dh: width / ratio });            \r\n      \r\n      // -----------------------------\r\n      // push to this\r\n      // -----------------------------\r\n      this.movable = true;\r\n      this.reverse = reverse;                  \r\n   }\r\n\r\n   move(): void {     \r\n      this.map_info.x += this.reverse ? -10 : 10;\r\n\r\n      if(this.map_info.x > mapInfo.width){\r\n         this.map_info.x = 0;\r\n      }\r\n   }\r\n}","import { mainInstance } from \"../../../../Main\";\r\nimport Camera from \"../../../../utils/TwoJS/Camera\";\r\nimport Image_Mesh from \"../../../../utils/TwoJS/Image_Mesh\";\r\nimport { Mesh } from \"../../../../utils/TwoJS/interfaces.\";\r\nimport colorRaycaster from \"../../../../utils/TwoJS/raycaster/colorRaycaster\";\r\nimport { renderer_functions } from \"../../../../utils/TwoJS/Renderer\";\r\nimport mapInfo from \"../../../constants/mapInfo\";\r\nimport LoadAllAudio from \"../../../LoadAllAudio\";\r\nimport { allImages } from \"../../../loadAllImages\";\r\n\r\nexport default class TankBullet extends Image_Mesh {\r\n   colorRaycaster: colorRaycaster;\r\n   startTime: number;\r\n   timeStamp: number;\r\n   startPos: { x: number; y: number; };\r\n   endPos: { x: number; y: number; };\r\n   whMultiplier: number;\r\n   killTime: number;\r\n   killTimeStamp: number;\r\n   killIterator: number;\r\n   constructor(\r\n      startPos: { x: number, y: number },\r\n      endPos: { x: number, y: number },\r\n   ) {\r\n\r\n      let whMultiplier = 1;\r\n      const { bullets } = allImages.enemies.tank\r\n\r\n      super(bullets[0], {\r\n         dx: 20,\r\n         dy: 20,\r\n         dz: 2,\r\n         dw: bullets[0].width * whMultiplier,\r\n         dh: bullets[0].height * whMultiplier\r\n      }, {})\r\n\r\n      // -------------------------------\r\n      // endPos startPos\r\n      // -------------------------------\r\n      this.whMultiplier = whMultiplier\r\n\r\n      this.startPos = startPos;\r\n      this.endPos = endPos;\r\n\r\n      mainInstance.scene.add(this)\r\n\r\n      // -------------------------------\r\n      // fly dateTime\r\n      // -------------------------------\r\n      this.startTime = Date.now()\r\n      this.timeStamp = 400\r\n\r\n      // -------------------------------\r\n      // kill player\r\n      // -------------------------------\r\n      this.colorRaycaster = new colorRaycaster([mainInstance.player], [this], mainInstance.camera, mapInfo.width, mapInfo.height)      \r\n\r\n      this.killTime = Date.now()\r\n      this.killTimeStamp = 100\r\n      this.killIterator = 0;\r\n\r\n      this.boom = this.boom.bind(this);\r\n      this.fly = this.fly.bind(this);\r\n      renderer_functions.push(this.fly);\r\n\r\n\r\n      let audio = <HTMLAudioElement>LoadAllAudio.audios.tankStrike.cloneNode(true);\r\n      audio.play()\r\n   }\r\n\r\n   fly() {\r\n      const { x: xEnd, y: yEnd } = this.endPos;\r\n\r\n      let parsedX = xEnd - this.startPos.x;\r\n      let parsedY = yEnd - this.startPos.y;\r\n\r\n      let deltaTime = (Date.now() - this.startTime) / this.timeStamp\r\n\r\n      if (deltaTime < 1) {\r\n         //60\r\n         let xMath = parsedX * deltaTime\r\n         let yMath = ((Math.sin(xMath * (Math.PI / parsedX)) / (Math.PI / 2)) * (-(25 / 1))) + ((parsedY / parsedX) * xMath)\r\n\r\n         this.map_info.x = this.startPos.x + xMath - (this.map_info.width / 2)\r\n         this.map_info.y = this.startPos.y + yMath - (this.map_info.height / 2)\r\n      }\r\n      else {\r\n         this.map_info.x = this.endPos.x - (this.map_info.width / 2)\r\n         this.map_info.y = this.endPos.y - (this.map_info.height / 2)\r\n\r\n\r\n         this.killTime = Date.now();\r\n         renderer_functions.removeIf(el => el == this.fly);\r\n         renderer_functions.push(this.boom)\r\n      }\r\n   }\r\n\r\n   boom() {\r\n      if (this.colorRaycaster.getCollision()) {\r\n         mainInstance.player.checkLives();\r\n      }\r\n      const { bullets } = allImages.enemies.tank\r\n      if (Date.now() - this.killTime > this.killTimeStamp) {\r\n         if (this.killIterator < 6) {\r\n\r\n\r\n            this.killIterator++;\r\n            this.image_info.source = bullets[this.killIterator];\r\n\r\n            this.map_info.width = this.image_info.source.width * this.whMultiplier;\r\n            this.map_info.height = this.image_info.source.height * this.whMultiplier\r\n\r\n            this.map_info.x = this.endPos.x - (this.map_info.width / 2)\r\n            this.map_info.y = this.endPos.y - (this.map_info.height / 2)\r\n         }\r\n         else {\r\n            this.colorRaycaster.html_dom.remove()\r\n            mainInstance.scene.remove(this)\r\n            renderer_functions.removeIf(el => el == this.boom);\r\n         }\r\n         this.killTime = Date.now();\r\n      }\r\n   }\r\n}","import { tankType } from \"../../../constants/Levels/levelInt\";\r\nimport { allImages } from \"../../../loadAllImages\";\r\nimport Enemy from \"../../Enemy\";\r\nimport TankBullet from \"./TankBullet\";\r\n\r\nexport default class Tank extends Enemy {\r\n   movable: boolean;\r\n   reverse: boolean;\r\n   type: tankType;\r\n   moveDateNow: number;\r\n   moveTimeStamp: number;\r\n   endPos: { x: number; y: number; };\r\n   startPos: { x: number; y: number; };\r\n   startTime: number;\r\n   speed: number;\r\n   shootDateNow: number;\r\n   shootTimeStamp: number;\r\n   shotPos: { x: number, y: number } | null;\r\n\r\n   constructor(\r\n      type: tankType,\r\n      reverse: boolean,\r\n      startPos: { x: number, y: number },\r\n      endPos: { x: number, y: number },\r\n      shotPos: { x: number, y: number } | null = null,\r\n   ) {\r\n      const { tank } = allImages.enemies\r\n      let startImg = reverse ? tank.reversed[0] : tank.normal[0]\r\n\r\n      let ratio = startImg.width / startImg.height;\r\n      let width = 50\r\n      let height = width / ratio\r\n\r\n      super(startImg, {\r\n         // dx: startPos.x - width / 2, dy: startPos.y - height / 2, dz: 2, dw: width, dh: height,\r\n         dx: startPos.x, dy: startPos.y, dz: 2, dw: width, dh: height,\r\n      })\r\n\r\n      // ---------------------------\r\n      // walk positions\r\n      // ---------------------------\r\n      this.startPos = startPos\r\n      this.endPos = endPos\r\n      this.startTime = Date.now();\r\n      this.speed = 50;\r\n\r\n      this.movable = true\r\n      this.reverse = reverse;\r\n      this.type = type;\r\n\r\n      // ---------------------------\r\n      // move time\r\n      // ---------------------------      \r\n      this.moveDateNow = Date.now();\r\n      this.moveTimeStamp = 50\r\n\r\n      // ---------------------------\r\n      // shoot time\r\n      // ---------------------------      \r\n      this.shotPos = shotPos\r\n      this.shootDateNow = Date.now();\r\n      this.shootTimeStamp = 1000\r\n\r\n      this.distanceToPlayer = 5000;\r\n\r\n      this.moveAnimation = this.moveAnimation.bind(this)\r\n\r\n      let destroy = this.destroy\r\n\r\n   }\r\n\r\n   moveAnimation() {\r\n      // ---------------------------\r\n      // move animation\r\n      // ---------------------------      \r\n      const { tank } = allImages.enemies;\r\n\r\n      let stateString: \"reversed\" | \"normal\" = this.reverse ? \"reversed\" : \"normal\"\r\n\r\n      if (Date.now() - this.moveDateNow > this.moveTimeStamp) {\r\n\r\n         if (this.image_info.source == tank[stateString][0]) {\r\n            this.image_info.source = tank[stateString][1]\r\n         }\r\n         else {\r\n            this.image_info.source = tank[stateString][0]\r\n         }\r\n         this.moveDateNow = Date.now()\r\n      }\r\n   }\r\n   move() {\r\n      this.startTime = Date.now();\r\n\r\n      this.move = this.move1;\r\n   }\r\n\r\n   move1() {\r\n\r\n      this.moveAnimation();\r\n\r\n      // ---------------------------\r\n      // change position\r\n      // ---------------------------      \r\n      // let percent = (Date.now() - this.startTime) / this.speed\r\n      this.map_info.x += (this.endPos.x - this.startPos.x) / this.speed;\r\n      this.map_info.y += (this.endPos.y - this.startPos.y) / this.speed;\r\n\r\n      // if ((this.endPos.x - this.map_info.x)/this.speed > this.endPos.x - this.startPos.x) {\r\n      if (\r\n         this.reverse ? this.map_info.x < this.endPos.x : this.map_info.x > this.endPos.x\r\n      ) {\r\n         // this.map_info.x = this.endPos.x - this.map_info.width / 2\r\n         // this.map_info.y = this.endPos.y - this.map_info.height / 2\r\n         this.map_info.x = this.endPos.x\r\n         this.map_info.y = this.endPos.y\r\n\r\n         if (this.type == \"normal\") {\r\n            this.move = this.shoot\r\n         }\r\n         else {\r\n            this.move = this.moveAnimation;\r\n         }\r\n      }\r\n      // else {\r\n      //    this.map_info.x = this.startPos.x + (this.endPos.x - this.startPos.x) * percent\r\n      //    this.map_info.y = this.startPos.y + (this.endPos.y - this.startPos.y) * percent\r\n      // }\r\n   }\r\n\r\n   /**\r\n    * shoot\r\n    */\r\n   shoot() {\r\n      this.moveAnimation();\r\n      if (Date.now() - this.shootDateNow > this.shootTimeStamp) {\r\n         let endPos = JSON.parse(JSON.stringify(this.endPos));\r\n         if (!this.reverse) endPos.x += this.image_info.width\r\n         endPos.y += 7\r\n         new TankBullet(endPos, this.shotPos!);\r\n         this.shootDateNow = Date.now();\r\n      }\r\n   }\r\n}","import { mainInstance } from \"../../Main\";\r\nimport Image_Mesh from \"../../utils/TwoJS/Image_Mesh\";\r\nimport colorRaycaster from \"../../utils/TwoJS/raycaster/colorRaycaster\";\r\nimport useSleep from \"../../utils/useSleep\";\r\nimport { tank1 } from \"../constants/Levels/levelInt\";\r\nimport mapInfo from \"../constants/mapInfo\";\r\nimport { allImages } from \"../loadAllImages\";\r\nimport destroyAnimation from \"./destroyAnimation\";\r\nimport Tank from \"./enemies/tank/Tank\";\r\n\r\nexport default class Bridge extends Image_Mesh {\r\n   tank: Tank;\r\n   colorRaycaster: colorRaycaster;\r\n\r\n   constructor(\r\n      x: number,\r\n      y: number,\r\n      width: number,\r\n      height: number,\r\n      tankInfo: tank1\r\n   ) {\r\n      const { bridge } = allImages\r\n\r\n      super(bridge, { dx: x, dy: y, dw: width, dh: height }, {})\r\n\r\n      let startPos = { x: tankInfo.startPos, y: y + height / 2 - 25 }\r\n      let endPos = { x: tankInfo.endPos, y: y + height / 2 - 25 }\r\n\r\n      this.tank = new Tank(\r\n         \"onBridge\",\r\n         tankInfo.reversed,\r\n         startPos,\r\n         endPos\r\n      );      \r\n\r\n      this.tank.speed = 300;\r\n      mainInstance.scene.add(this.tank)\r\n\r\n      this.colorRaycaster = new colorRaycaster([this], [this.tank], mainInstance.camera, mapInfo.width, mapInfo.height)\r\n\r\n      document.getElementById(\"aa\")?.appendChild(this.colorRaycaster.html_dom);\r\n   }\r\n\r\n   @destroyAnimation()\r\n   async destroy() {      \r\n\r\n      if (this.colorRaycaster.getCollision()) {         \r\n\r\n         this.tank.destroy();\r\n      }\r\n      else {\r\n         this.tank.move = this.tank.moveAnimation;\r\n      }\r\n      \r\n      mainInstance.enemies.removeIf(el => el == this)\r\n      for (let x = 0; x < 4; x++) {\r\n         mainInstance.renderer.backgroundColor = x % 2 == 0 ? \"purple\" : \"blue\";\r\n         await useSleep(200);\r\n      }\r\n   }\r\n}","import { mainInstance } from \"../../Main\";\r\nimport Camera from \"../../utils/TwoJS/Camera\";\r\nimport { Mesh } from \"../../utils/TwoJS/interfaces.\";\r\nimport { renderer_functions } from \"../../utils/TwoJS/Renderer\";\r\nimport useSleep from \"../../utils/useSleep\";\r\nimport mapInfo from \"../constants/mapInfo\";\r\nimport GameConfig from \"../GameConfig\";\r\nimport { Keys } from \"../KeyboardManager\";\r\nimport LoadAllAudio from \"../LoadAllAudio\";\r\nimport { allImages } from \"../loadAllImages\";\r\n\r\nexport class ScoreBoard implements Mesh {\r\n   map_info: { x: number; y: number; z: number; width: number; height: number; };\r\n   fuelStatus: number;\r\n   score: number;\r\n   lives: number;\r\n   fuelDateNow: number;\r\n   fuelTimeStamp: number;\r\n   loseFuelDateNow: number;\r\n   loseFuelTimeStamp: number;\r\n   levelPos: number;   \r\n\r\n   constructor() {\r\n      let height = 140\r\n\r\n      this.map_info = {\r\n         x: 0,\r\n         y: mapInfo.height - height,\r\n         z: 5,\r\n         width: mapInfo.width,\r\n         height,\r\n      }\r\n\r\n      this.loseFuelDateNow = Date.now();\r\n      this.loseFuelTimeStamp = 100;\r\n\r\n      this.fuelDateNow = Date.now();\r\n      this.fuelTimeStamp = 200;\r\n\r\n      this.fuelStatus = 1\r\n      this.score = 0\r\n      this.lives = 4\r\n      this.levelPos = 1\r\n\r\n      this.fuelUsage = this.fuelUsage.bind(this);\r\n      this.addToRender();\r\n\r\n   }\r\n\r\n   addToRender() {\r\n      renderer_functions.push(this.fuelUsage)\r\n   }\r\n\r\n   get HighScore() {\r\n      return parseInt(sessionStorage.getItem('HighScore') || \"0\");\r\n   }\r\n   set HighScore(val: number) {\r\n      sessionStorage.setItem('HighScore', val.toString())\r\n   }\r\n\r\n\r\n   async fuelUsage() {      \r\n      if (!GameConfig.moveBool) { return }\r\n\r\n      if (Date.now() - this.loseFuelDateNow <= this.loseFuelTimeStamp) return\r\n      this.loseFuelDateNow = Date.now();\r\n\r\n      if (Keys.KeyW) {\r\n         this.fuelStatus -= 0.01\r\n      }\r\n      else if (Keys.KeyS) {\r\n         this.fuelStatus -= 0.002\r\n      }\r\n      else {\r\n         this.fuelStatus -= 0.005\r\n      }\r\n\r\n      if (this.fuelStatus <= 0) {\r\n         this.fuelStatus = 0         \r\n         mainInstance.player.checkLives();\r\n      }      \r\n   }\r\n\r\n   addFuel() {\r\n      if (Date.now() - this.fuelDateNow > this.fuelTimeStamp) {\r\n         let audio = <HTMLAudioElement>LoadAllAudio.audios.Health.cloneNode(true);\r\n         audio.play()\r\n         \r\n         this.fuelStatus += 0.2\r\n         this.fuelDateNow = Date.now();\r\n\r\n         if (this.fuelStatus >= 1) this.fuelStatus = 1;\r\n      }\r\n   } \r\n\r\n   action(ctx: CanvasRenderingContext2D, camera: Camera) {\r\n\r\n      // ------------------\r\n      // some math\r\n      // ------------------\r\n      const { x, y, width, height } = this.map_info\r\n      const { gasStatusBar } = allImages\r\n      const { levelPos } = allImages.plane\r\n\r\n      let ratio = gasStatusBar.width / gasStatusBar.height\r\n      /**fuel width */\r\n      let width1 = 300\r\n      /**fuel position */\r\n      let x1 = (mapInfo.width / 2) - (width1 / 2)\r\n\r\n      /**margin of fuel bar */\r\n      let marginTop = 50\r\n\r\n      let fuelArmDelta = width1 - 60;\r\n      let xArm = (mapInfo.width / 2) - (fuelArmDelta / 2) + (this.fuelStatus * fuelArmDelta) - 7\r\n      let yArm = y + marginTop\r\n\r\n      // -------------\r\n      // background\r\n      // -------------\r\n      ctx.beginPath();\r\n      ctx.fillStyle = \"grey\";\r\n      ctx.rect(x, y, width, height);\r\n      ctx.fill();\r\n\r\n      // -------------\r\n      //  score\r\n      // -------------\r\n      ctx.fillStyle = \"yellow\";\r\n      ctx.font = \"50px slkscr\";\r\n      ctx.textAlign = \"end\";\r\n      ctx.fillText(this.score.toString(), x1 + (width1 / 2), y + 40);\r\n\r\n      // -------------\r\n      // draw fuel\r\n      // -------------\r\n      // arm\r\n      ctx.beginPath();\r\n      ctx.fillStyle = \"yellow\";\r\n      ctx.rect(xArm, yArm, 14, 60);\r\n      ctx.fill();\r\n      // image\r\n      ctx.drawImage(gasStatusBar, x1, y + marginTop, width1, width1 / ratio)\r\n\r\n      // ------------\r\n      // lives\r\n      // ------------\r\n\r\n\r\n      for (let x = 0; x < this.lives; x++) {\r\n         ctx.drawImage(levelPos, width - 300 + x * 60, y + 90)\r\n      }\r\n\r\n\r\n      // ------------\r\n      // HighScore\r\n      // ------------\r\n\r\n      ctx.fillStyle = \"black\";\r\n      ctx.font = \"35px slkscr\";\r\n      ctx.textAlign = \"left\";\r\n      ctx.fillText(\"HI\", width - 300, y + 40);\r\n      ctx.textAlign = \"right\";\r\n      ctx.fillText(this.HighScore.toString(), width - 20, y + 40);\r\n\r\n      // ------------\r\n      // Level\r\n      // ------------\r\n      ctx.fillStyle = \"yellow\";\r\n      ctx.font = \"35px slkscr\";\r\n      ctx.textAlign = \"left\";\r\n      ctx.fillText(\"BRIDGE\", width - 300, y + 70);\r\n      ctx.textAlign = \"right\";\r\n      ctx.fillText(this.levelPos.toString(), width - 20, y + 70);\r\n\r\n      // ------------------------------------\r\n      // SinglePlayer / MultiPlayer\r\n      // ------------------------------------\r\n\r\n      ctx.fillStyle = \"black\";\r\n      ctx.font = \"40px slkscr\";\r\n      ctx.textAlign = \"center\";\r\n      ctx.fillText(\"GAME\", 250, y + 80);\r\n      ctx.fillText(\"1\", 250, y + 110);\r\n\r\n\r\n      ctx.fillStyle = \"yellow\";\r\n      ctx.font = \"40px slkscr\";\r\n      ctx.textAlign = \"left\";\r\n      ctx.fillText(\"P1\", 190, y + 40);\r\n   }\r\n}","import Image_Mesh from \"../../utils/TwoJS/Image_Mesh\";\r\nimport Polygon_Mesh from \"../../utils/TwoJS/PolygonMesh\";\r\nimport mapInfo from \"../constants/mapInfo\";\r\nimport { allImages } from \"../loadAllImages\";\r\n\r\nexport default class Block extends Image_Mesh {\r\n   constructor(\r\n      name: string,\r\n      x: number,\r\n      y: number,      \r\n   ) {\r\n\r\n      let image = allImages.levels[name]\r\n\r\n      let height = mapInfo.width/(image.width/image.height)\r\n\r\n      super(\r\n         image,\r\n         { \r\n            dx: x, \r\n            dy: y - height, \r\n            dz:0,\r\n            dw: mapInfo.width, \r\n            dh: height\r\n         },\r\n         {}\r\n      )\r\n   }\r\n}","import { mainInstance } from \"../../Main\";\r\nimport Image_Mesh from \"../../utils/TwoJS/Image_Mesh\";\r\nimport { allImages } from \"../loadAllImages\";\r\nimport destroyAnimation from \"./destroyAnimation\";\r\n\r\nexport default class Fuel extends Image_Mesh {\r\n   constructor(x: number, y: number) {\r\n      let width = 40;\r\n      let height = width / (allImages.fuel.width / allImages.fuel.height)\r\n\r\n      super(\r\n         allImages.fuel,\r\n         { dx: x, dy: y, dw: width, dh: height },\r\n         {}\r\n      )\r\n   }\r\n   @destroyAnimation()\r\n   destroy() {\r\n      mainInstance.fuels.removeIf(el => el == this)      \r\n   }\r\n}","import { mainInstance } from \"../../../Main\";\r\nimport colorRaycaster from \"../../../utils/TwoJS/raycaster/colorRaycaster\";\r\nimport mapInfo from \"../../constants/mapInfo\";\r\nimport { allImages } from \"../../loadAllImages\";\r\nimport Enemy from \"../Enemy\";\r\n\r\nexport default class Ballon extends Enemy {   \r\n   movable:boolean\r\n   reverse: boolean;\r\n   colider: colorRaycaster;\r\n\r\n   constructor(x: number, y: number, moveable:boolean, reverse:boolean) {\r\n      const { ballon } = allImages.enemies;   \r\n      let ratio = ballon.width / ballon.height;\r\n\r\n      super(ballon, { dx: x, dy: y, dw: 40, dh: 40 / ratio })      \r\n\r\n      this.movable = moveable;\r\n      this.reverse = reverse;\r\n      this.colider = new colorRaycaster(mainInstance.blocks, [this], mainInstance.camera, mapInfo.width, mapInfo.height);\r\n   }\r\n   \r\n   \r\n   move():void {\r\n      let { x, y, width, height } = this.map_info\r\n\r\n      x += this.reverse ? -2 : 2;\r\n      \r\n      if(this.colider.getCollision()){\r\n         this.reverse = !this.reverse\r\n      }\r\n\r\n      this.map_info.x += this.reverse ? -2 : 2;\r\n    }\r\n}","\r\n// :(block|enemy)[]\r\n\r\nimport mapInfo from \"../mapInfo\"\r\nimport { block, other } from \"./levelInt\"\r\n\r\nfunction getPos(x: number, y: number) {\r\n   return { x: x * mapInfo.width, y: y * mapInfo.height }\r\n}\r\n\r\nlet level2: { blocks: block, other: other[] } = {\r\n   blocks: {\r\n      name: \"level2\",\r\n      position: getPos(0, 0),\r\n      // startPos: getPos(0.5, 0),\r\n      startPos: getPos(0.485, -0.05)\r\n   },\r\n   other: [\r\n      {\r\n         type: \"bridge\",\r\n         position: getPos(0.4, -0.09),\r\n         width: 0.2 * mapInfo.width,\r\n         height: 0.085 * mapInfo.height,\r\n         tank: {\r\n            startPos: getPos(0.8, -0.09).x,\r\n            endPos: getPos(0.2, -0.09).x,\r\n            reversed: true,\r\n         }\r\n      },\r\n   ]\r\n}\r\n\r\nexport default level2","import level1 from \"./modules/constants/Levels/level1\";\r\nimport Player from \"./modules/mapElements/Player\";\r\nimport Camera from \"./utils/TwoJS/Camera\";\r\nimport { Renderer, renderer_functions, renderer_functions_after } from \"./utils/TwoJS/Renderer\";\r\nimport Scene from \"./utils/TwoJS/Scene\";\r\nimport mapInfo from \"./modules/constants/mapInfo\";\r\nimport Enemy from \"./modules/mapElements/Enemy\";\r\n\r\nimport { allImages, loadAllImages } from \"./modules/loadAllImages\";\r\nimport Helicopter from \"./modules/mapElements/enemies/Helicopter\";\r\nimport Ship from \"./modules/mapElements/enemies/Ship\";\r\nimport FighterPlane from \"./modules/mapElements/enemies/FighterPlane\";\r\nimport Bridge from \"./modules/mapElements/Bridge\";\r\nimport { ScoreBoard } from \"./modules/mapElements/ScoreBoard\";\r\nimport Block from \"./modules/mapElements/Block\";\r\nimport Fuel from \"./modules/mapElements/Fuel\";\r\nimport Ballon from \"./modules/mapElements/enemies/Ballon\";\r\nimport level2 from \"./modules/constants/Levels/level2\";\r\nimport Tank from \"./modules/mapElements/enemies/tank/Tank\";\r\nimport LoadAllAudio from \"./modules/LoadAllAudio\";\r\nimport GameConfig from \"./modules/GameConfig\";\r\n\r\nexport let mainInstance: Main;\r\nexport class Main {\r\n   scene: Scene = new Scene();\r\n   camera: Camera = new Camera();\r\n   renderer: Renderer = new Renderer(mapInfo.width, mapInfo.height, this.scene, this.camera);\r\n\r\n   enemies: (Enemy | Bridge)[] = []\r\n   blocks: Block[] = []\r\n   bridges: Bridge[] = []\r\n   fuels: Fuel[] = []\r\n   player!: Player\r\n   scoreBoard!: ScoreBoard;\r\n\r\n\r\n   constructor() {\r\n      mainInstance = this;\r\n      document.getElementById(\"root\")?.appendChild(this.renderer.html_dom)\r\n\r\n      this.init();\r\n   }\r\n   async init() {\r\n      await loadAllImages();      \r\n\r\n      await LoadAllAudio.getAudios();      \r\n\r\n      GameConfig.moveBool = false;\r\n      this.scoreBoard = new ScoreBoard();\r\n      this.scene.add(this.scoreBoard);\r\n\r\n      let mouse = new Promise(resolve=>{\r\n         document.body.onclick = async () => {\r\n            resolve(true)\r\n         }\r\n      })\r\n\r\n      let keyboard = new Promise(resolve=>{\r\n         window.addEventListener(\"keydown\", ()=>{\r\n            resolve(true)\r\n         });\r\n      })\r\n\r\n      await Promise.race([mouse,keyboard]);\r\n\r\n      this.paintMap();\r\n   }\r\n   paintMap() {\r\n      GameConfig.moveBool = true;\r\n      for (const key in LoadAllAudio.audios) {\r\n         let audio = LoadAllAudio.audios[(<keyof typeof LoadAllAudio.audios>key)]\r\n         audio.pause();\r\n         audio.currentTime = 0\r\n      }\r\n\r\n      this.scene.mesh_array = [];\r\n      renderer_functions.removeIf(el => true);\r\n      renderer_functions_after.removeIf(el => true);\r\n\r\n      this.enemies = [];\r\n      this.blocks = [];\r\n      this.bridges = [];\r\n      this.fuels = [];\r\n\r\n\r\n      this.scene.add(this.scoreBoard);\r\n      this.scoreBoard.addToRender()\r\n      // ------------------\r\n      // player\r\n      // ------------------\r\n      this.player = new Player()\r\n      this.scene.add(this.player)\r\n\r\n\r\n      // ------------------\r\n      // blocks\r\n      // ------------------\r\n\r\n      const startPos = { x: 0, y: 0.6 * mapInfo.height };\r\n\r\n\r\n      ([level1, level2]).forEach((level, ind, arr) => {\r\n\r\n         let levelBefore = arr[Math.max(0, ind - 1)];\r\n         let imageBefore = allImages.levels[levelBefore.blocks.name];\r\n         let boostY = startPos.y - ind * mapInfo.width / (imageBefore.width / imageBefore.height);\r\n\r\n         const { name, position, startPos: startPosPlayer } = level.blocks\r\n         let image = new Block(name, position.x + startPos.x, position.y + boostY,)\r\n         this.blocks.push(image)\r\n         this.scene.add(image)\r\n\r\n\r\n\r\n         if (ind == this.scoreBoard.levelPos - 1) {\r\n            this.camera.y = startPosPlayer.y + boostY - mapInfo.height * 0.6\r\n\r\n            this.player.map_info.y = startPosPlayer.y + boostY\r\n            this.player.map_info.x = startPosPlayer.x\r\n         }\r\n\r\n\r\n         for (const other of level.other) {\r\n            // ----------------\r\n            // enemies\r\n            // ----------------\r\n            if (other.type == \"helicopter\") {\r\n               let batCopter = new Helicopter(other.reversed, other.moveable, other.helType, { x: other.position.x, y: other.position.y + boostY })\r\n               this.scene.add(batCopter)\r\n               // console.log(this.scene);\r\n\r\n               this.enemies.push(batCopter)\r\n            }\r\n            else if (other.type == \"tank\") {\r\n               let startPos = {\r\n                  x: other.startPos.x,\r\n                  y: other.startPos.y + boostY\r\n               }\r\n               let endPos = {\r\n                  x: other.endPos.x,\r\n                  y: other.endPos.y + boostY\r\n               }\r\n               let shotPos = {\r\n                  x: other.shotPos.x,\r\n                  y: other.shotPos.y + boostY\r\n               }\r\n\r\n               let batTank = new Tank(other.tankType, other.reversed, startPos, endPos, shotPos,);\r\n               this.scene.add(batTank);\r\n               this.enemies.push(batTank)\r\n            }\r\n            else if (other.type == \"ship\") {\r\n               let batShip = new Ship(other.reversed, other.moveable, { x: other.position.x, y: other.position.y + boostY })\r\n               this.scene.add(batShip)\r\n               // console.log(this.scene);\r\n\r\n               this.enemies.push(batShip)\r\n            }\r\n            else if (other.type == \"fighterPlane\") {\r\n               let batPlane = new FighterPlane(other.reversed, { x: other.position.x, y: other.position.y + boostY })\r\n               this.scene.add(batPlane)\r\n               // console.log(this.scene);\r\n\r\n               this.enemies.push(batPlane)\r\n            }\r\n            else if (other.type == \"ballon\") {\r\n               let batBallon = new Ballon(other.position.x, other.position.y + boostY, other.moveable, other.reversed)\r\n               this.scene.add(batBallon)\r\n               // console.log(this.scene);\r\n\r\n               this.enemies.push(batBallon)\r\n            }\r\n            // ----------------\r\n            // Other\r\n            // ----------------\r\n            else if (other.type == \"bridge\" && ind != this.scoreBoard.levelPos - 1) {\r\n               const { x, y } = other.position\r\n               let batBridge = new Bridge(x, y + boostY, other.width, other.height, other.tank)\r\n\r\n               this.scene.add(batBridge)\r\n               // this.bridges.push(batBridge)\r\n               this.enemies.push(batBridge)\r\n            }\r\n            else if (other.type == \"fuel\") {\r\n               const { x, y } = other.position;\r\n               let batFuel = new Fuel(x, y + boostY)\r\n               this.fuels.push(batFuel)\r\n               this.scene.add(batFuel)\r\n            }\r\n         }\r\n      })\r\n   }\r\n}\r\n\r\n\r\n// ------------------------------------------------------------------------------------------------\r\n","declare global {\r\n   interface Array<T> {\r\n      myRandom(): T\r\n      removeIf(func: (element: T, index: number, array: T[]) => Boolean): void\r\n      // flat<A, D=1>(this: A, depth?: D): FlatArray<A, D>[]\r\n   }   \r\n}\r\n\r\n/**@description extends Array */\r\nexport default function extending() {\r\n   Array.prototype.myRandom = function () {\r\n      return this[Math.floor(Math.random() * this.length)]\r\n   }\r\n\r\n   Array.prototype.removeIf = function (func: (element: any, index: number, array: any[]) => Boolean) {\r\n      var i = 0;\r\n      while (i < this.length) {\r\n         if (func(this[i], i, this)) {\r\n            this.splice(i, 1);\r\n         }\r\n         else {\r\n            ++i;\r\n         }\r\n      }\r\n   }\r\n}","import './style.scss';\r\nimport {Main} from \"./components/Main\";\r\nimport extending from './components/utils/extending';\r\n\r\nfunction init() {   \r\n   // const container:HTMLDivElement = document.getElementById('root');\r\n   // console.log(\"elo\");   \r\n   extending();\r\n   new Main();\r\n}\r\n\r\ninit();"],"sourceRoot":""}